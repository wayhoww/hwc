Starting parse
Entering state 0
Stack now 0
Reading a token
Next token is token "const" ()
Shifting token "const" ()
Entering state 3
Stack now 0 3
Reading a token
Next token is token "int" ()
Shifting token "int" ()
Entering state 2
Stack now 0 3 2
Reducing stack by rule 11 (line 100):
   $1 = token "int" ()
-> $$ = nterm b_type ()
Entering state 13
Stack now 0 3 13
Reading a token
Next token is token "identifier" ()
Shifting token "identifier" ()
Entering state 18
Stack now 0 3 13 18
Reducing stack by rule 46 (line 219):
   $1 = token "identifier" ()
-> $$ = nterm ident ()
Entering state 23
Stack now 0 3 13 23
Reducing stack by rule 14 (line 111):
-> $$ = nterm array_dims ()
Entering state 29
Stack now 0 3 13 23 29
Reading a token
Next token is token "[" ()
Shifting token "[" ()
Entering state 37
Stack now 0 3 13 23 29 37
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 3 13 23 29 37 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 3 13 23 29 37 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 3 13 23 29 37 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 3 13 23 29 37 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 3 13 23 29 37 55
Reading a token
Next token is token "]" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 3 13 23 29 37 57
Next token is token "]" ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 58
Stack now 0 3 13 23 29 37 58
Next token is token "]" ()
Shifting token "]" ()
Entering state 81
Stack now 0 3 13 23 29 37 58 81
Reducing stack by rule 15 (line 112):
   $1 = nterm array_dims ()
   $2 = token "[" ()
   $3 = nterm const_exp ()
   $4 = token "]" ()
-> $$ = nterm array_dims ()
Entering state 29
Stack now 0 3 13 23 29
Reading a token
Next token is token "[" ()
Shifting token "[" ()
Entering state 37
Stack now 0 3 13 23 29 37
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 3 13 23 29 37 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 3 13 23 29 37 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 3 13 23 29 37 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 3 13 23 29 37 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 3 13 23 29 37 55
Reading a token
Next token is token "]" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 3 13 23 29 37 57
Next token is token "]" ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 58
Stack now 0 3 13 23 29 37 58
Next token is token "]" ()
Shifting token "]" ()
Entering state 81
Stack now 0 3 13 23 29 37 58 81
Reducing stack by rule 15 (line 112):
   $1 = nterm array_dims ()
   $2 = token "[" ()
   $3 = nterm const_exp ()
   $4 = token "]" ()
-> $$ = nterm array_dims ()
Entering state 29
Stack now 0 3 13 23 29
Reading a token
Next token is token "=" ()
Shifting token "=" ()
Entering state 38
Stack now 0 3 13 23 29 38
Reading a token
Next token is token "{" ()
Shifting token "{" ()
Entering state 59
Stack now 0 3 13 23 29 38 59
Reading a token
Next token is token "}" ()
Reducing stack by rule 18 (line 123):
-> $$ = nterm const_array_elements ()
Entering state 83
Stack now 0 3 13 23 29 38 59 83
Next token is token "}" ()
Shifting token "}" ()
Entering state 101
Stack now 0 3 13 23 29 38 59 83 101
Reducing stack by rule 17 (line 118):
   $1 = token "{" ()
   $2 = nterm const_array_elements ()
   $3 = token "}" ()
-> $$ = nterm const_init_val ()
Entering state 60
Stack now 0 3 13 23 29 38 60
Reducing stack by rule 13 (line 105):
   $1 = nterm ident ()
   $2 = nterm array_dims ()
   $3 = token "=" ()
   $4 = nterm const_init_val ()
-> $$ = nterm const_def ()
Entering state 22
Stack now 0 3 13 22
Reducing stack by rule 8 (line 92):
   $1 = token "const" ()
   $2 = nterm b_type ()
   $3 = nterm const_def ()
-> $$ = nterm const_decl ()
Entering state 8
Stack now 0 8
Reading a token
Next token is token ";" ()
Shifting token ";" ()
Entering state 17
Stack now 0 8 17
Reducing stack by rule 10 (line 96):
   $1 = nterm const_decl ()
   $2 = token ";" ()
-> $$ = nterm const_decl_stmt ()
Entering state 9
Stack now 0 9
Reducing stack by rule 6 (line 85):
   $1 = nterm const_decl_stmt ()
-> $$ = nterm decl ()
Entering state 7
Stack now 0 7
Reducing stack by rule 5 (line 80):
   $1 = nterm decl ()
-> $$ = nterm comp_unit_item ()
Entering state 6
Stack now 0 6
Reducing stack by rule 2 (line 73):
   $1 = nterm comp_unit_item ()
-> $$ = nterm comp_unit ()
Entering state 5
Stack now 0 5
Reading a token
Next token is token "const" ()
Shifting token "const" ()
Entering state 3
Stack now 0 5 3
Reading a token
Next token is token "int" ()
Shifting token "int" ()
Entering state 2
Stack now 0 5 3 2
Reducing stack by rule 11 (line 100):
   $1 = token "int" ()
-> $$ = nterm b_type ()
Entering state 13
Stack now 0 5 3 13
Reading a token
Next token is token "identifier" ()
Shifting token "identifier" ()
Entering state 18
Stack now 0 5 3 13 18
Reducing stack by rule 46 (line 219):
   $1 = token "identifier" ()
-> $$ = nterm ident ()
Entering state 23
Stack now 0 5 3 13 23
Reducing stack by rule 14 (line 111):
-> $$ = nterm array_dims ()
Entering state 29
Stack now 0 5 3 13 23 29
Reading a token
Next token is token "[" ()
Shifting token "[" ()
Entering state 37
Stack now 0 5 3 13 23 29 37
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 3 13 23 29 37 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 3 13 23 29 37 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 3 13 23 29 37 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 3 13 23 29 37 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 3 13 23 29 37 55
Reading a token
Next token is token "]" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 3 13 23 29 37 57
Next token is token "]" ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 58
Stack now 0 5 3 13 23 29 37 58
Next token is token "]" ()
Shifting token "]" ()
Entering state 81
Stack now 0 5 3 13 23 29 37 58 81
Reducing stack by rule 15 (line 112):
   $1 = nterm array_dims ()
   $2 = token "[" ()
   $3 = nterm const_exp ()
   $4 = token "]" ()
-> $$ = nterm array_dims ()
Entering state 29
Stack now 0 5 3 13 23 29
Reading a token
Next token is token "[" ()
Shifting token "[" ()
Entering state 37
Stack now 0 5 3 13 23 29 37
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 3 13 23 29 37 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 3 13 23 29 37 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 3 13 23 29 37 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 3 13 23 29 37 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 3 13 23 29 37 55
Reading a token
Next token is token "]" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 3 13 23 29 37 57
Next token is token "]" ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 58
Stack now 0 5 3 13 23 29 37 58
Next token is token "]" ()
Shifting token "]" ()
Entering state 81
Stack now 0 5 3 13 23 29 37 58 81
Reducing stack by rule 15 (line 112):
   $1 = nterm array_dims ()
   $2 = token "[" ()
   $3 = nterm const_exp ()
   $4 = token "]" ()
-> $$ = nterm array_dims ()
Entering state 29
Stack now 0 5 3 13 23 29
Reading a token
Next token is token "=" ()
Shifting token "=" ()
Entering state 38
Stack now 0 5 3 13 23 29 38
Reading a token
Next token is token "{" ()
Shifting token "{" ()
Entering state 59
Stack now 0 5 3 13 23 29 38 59
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 3 13 23 29 38 59 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 3 13 23 29 38 59 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 3 13 23 29 38 59 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 3 13 23 29 38 59 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 3 13 23 29 38 59 55
Reading a token
Next token is token "," ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 3 13 23 29 38 59 57
Next token is token "," ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 61
Stack now 0 5 3 13 23 29 38 59 61
Reducing stack by rule 16 (line 117):
   $1 = nterm const_exp ()
-> $$ = nterm const_init_val ()
Entering state 82
Stack now 0 5 3 13 23 29 38 59 82
Reducing stack by rule 21 (line 130):
   $1 = nterm const_init_val ()
-> $$ = nterm real_const_array_elements ()
Entering state 84
Stack now 0 5 3 13 23 29 38 59 84
Next token is token "," ()
Shifting token "," ()
Entering state 102
Stack now 0 5 3 13 23 29 38 59 84 102
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 3 13 23 29 38 59 84 102 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 3 13 23 29 38 59 84 102 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 3 13 23 29 38 59 84 102 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 3 13 23 29 38 59 84 102 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 3 13 23 29 38 59 84 102 55
Reading a token
Next token is token "," ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 3 13 23 29 38 59 84 102 57
Next token is token "," ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 61
Stack now 0 5 3 13 23 29 38 59 84 102 61
Reducing stack by rule 16 (line 117):
   $1 = nterm const_exp ()
-> $$ = nterm const_init_val ()
Entering state 122
Stack now 0 5 3 13 23 29 38 59 84 102 122
Reducing stack by rule 20 (line 129):
   $1 = nterm real_const_array_elements ()
   $2 = token "," ()
   $3 = nterm const_init_val ()
-> $$ = nterm real_const_array_elements ()
Entering state 84
Stack now 0 5 3 13 23 29 38 59 84
Next token is token "," ()
Shifting token "," ()
Entering state 102
Stack now 0 5 3 13 23 29 38 59 84 102
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 3 13 23 29 38 59 84 102 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 3 13 23 29 38 59 84 102 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 3 13 23 29 38 59 84 102 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 3 13 23 29 38 59 84 102 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 3 13 23 29 38 59 84 102 55
Reading a token
Next token is token "," ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 3 13 23 29 38 59 84 102 57
Next token is token "," ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 61
Stack now 0 5 3 13 23 29 38 59 84 102 61
Reducing stack by rule 16 (line 117):
   $1 = nterm const_exp ()
-> $$ = nterm const_init_val ()
Entering state 122
Stack now 0 5 3 13 23 29 38 59 84 102 122
Reducing stack by rule 20 (line 129):
   $1 = nterm real_const_array_elements ()
   $2 = token "," ()
   $3 = nterm const_init_val ()
-> $$ = nterm real_const_array_elements ()
Entering state 84
Stack now 0 5 3 13 23 29 38 59 84
Next token is token "," ()
Shifting token "," ()
Entering state 102
Stack now 0 5 3 13 23 29 38 59 84 102
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 3 13 23 29 38 59 84 102 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 3 13 23 29 38 59 84 102 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 3 13 23 29 38 59 84 102 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 3 13 23 29 38 59 84 102 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 3 13 23 29 38 59 84 102 55
Reading a token
Next token is token "," ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 3 13 23 29 38 59 84 102 57
Next token is token "," ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 61
Stack now 0 5 3 13 23 29 38 59 84 102 61
Reducing stack by rule 16 (line 117):
   $1 = nterm const_exp ()
-> $$ = nterm const_init_val ()
Entering state 122
Stack now 0 5 3 13 23 29 38 59 84 102 122
Reducing stack by rule 20 (line 129):
   $1 = nterm real_const_array_elements ()
   $2 = token "," ()
   $3 = nterm const_init_val ()
-> $$ = nterm real_const_array_elements ()
Entering state 84
Stack now 0 5 3 13 23 29 38 59 84
Next token is token "," ()
Shifting token "," ()
Entering state 102
Stack now 0 5 3 13 23 29 38 59 84 102
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 3 13 23 29 38 59 84 102 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 3 13 23 29 38 59 84 102 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 3 13 23 29 38 59 84 102 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 3 13 23 29 38 59 84 102 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 3 13 23 29 38 59 84 102 55
Reading a token
Next token is token "," ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 3 13 23 29 38 59 84 102 57
Next token is token "," ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 61
Stack now 0 5 3 13 23 29 38 59 84 102 61
Reducing stack by rule 16 (line 117):
   $1 = nterm const_exp ()
-> $$ = nterm const_init_val ()
Entering state 122
Stack now 0 5 3 13 23 29 38 59 84 102 122
Reducing stack by rule 20 (line 129):
   $1 = nterm real_const_array_elements ()
   $2 = token "," ()
   $3 = nterm const_init_val ()
-> $$ = nterm real_const_array_elements ()
Entering state 84
Stack now 0 5 3 13 23 29 38 59 84
Next token is token "," ()
Shifting token "," ()
Entering state 102
Stack now 0 5 3 13 23 29 38 59 84 102
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 3 13 23 29 38 59 84 102 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 3 13 23 29 38 59 84 102 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 3 13 23 29 38 59 84 102 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 3 13 23 29 38 59 84 102 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 3 13 23 29 38 59 84 102 55
Reading a token
Next token is token "," ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 3 13 23 29 38 59 84 102 57
Next token is token "," ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 61
Stack now 0 5 3 13 23 29 38 59 84 102 61
Reducing stack by rule 16 (line 117):
   $1 = nterm const_exp ()
-> $$ = nterm const_init_val ()
Entering state 122
Stack now 0 5 3 13 23 29 38 59 84 102 122
Reducing stack by rule 20 (line 129):
   $1 = nterm real_const_array_elements ()
   $2 = token "," ()
   $3 = nterm const_init_val ()
-> $$ = nterm real_const_array_elements ()
Entering state 84
Stack now 0 5 3 13 23 29 38 59 84
Next token is token "," ()
Shifting token "," ()
Entering state 102
Stack now 0 5 3 13 23 29 38 59 84 102
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 3 13 23 29 38 59 84 102 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 3 13 23 29 38 59 84 102 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 3 13 23 29 38 59 84 102 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 3 13 23 29 38 59 84 102 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 3 13 23 29 38 59 84 102 55
Reading a token
Next token is token "," ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 3 13 23 29 38 59 84 102 57
Next token is token "," ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 61
Stack now 0 5 3 13 23 29 38 59 84 102 61
Reducing stack by rule 16 (line 117):
   $1 = nterm const_exp ()
-> $$ = nterm const_init_val ()
Entering state 122
Stack now 0 5 3 13 23 29 38 59 84 102 122
Reducing stack by rule 20 (line 129):
   $1 = nterm real_const_array_elements ()
   $2 = token "," ()
   $3 = nterm const_init_val ()
-> $$ = nterm real_const_array_elements ()
Entering state 84
Stack now 0 5 3 13 23 29 38 59 84
Next token is token "," ()
Shifting token "," ()
Entering state 102
Stack now 0 5 3 13 23 29 38 59 84 102
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 3 13 23 29 38 59 84 102 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 3 13 23 29 38 59 84 102 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 3 13 23 29 38 59 84 102 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 3 13 23 29 38 59 84 102 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 3 13 23 29 38 59 84 102 55
Reading a token
Next token is token "}" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 3 13 23 29 38 59 84 102 57
Next token is token "}" ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 61
Stack now 0 5 3 13 23 29 38 59 84 102 61
Reducing stack by rule 16 (line 117):
   $1 = nterm const_exp ()
-> $$ = nterm const_init_val ()
Entering state 122
Stack now 0 5 3 13 23 29 38 59 84 102 122
Reducing stack by rule 20 (line 129):
   $1 = nterm real_const_array_elements ()
   $2 = token "," ()
   $3 = nterm const_init_val ()
-> $$ = nterm real_const_array_elements ()
Entering state 84
Stack now 0 5 3 13 23 29 38 59 84
Next token is token "}" ()
Reducing stack by rule 19 (line 124):
   $1 = nterm real_const_array_elements ()
-> $$ = nterm const_array_elements ()
Entering state 83
Stack now 0 5 3 13 23 29 38 59 83
Next token is token "}" ()
Shifting token "}" ()
Entering state 101
Stack now 0 5 3 13 23 29 38 59 83 101
Reducing stack by rule 17 (line 118):
   $1 = token "{" ()
   $2 = nterm const_array_elements ()
   $3 = token "}" ()
-> $$ = nterm const_init_val ()
Entering state 60
Stack now 0 5 3 13 23 29 38 60
Reducing stack by rule 13 (line 105):
   $1 = nterm ident ()
   $2 = nterm array_dims ()
   $3 = token "=" ()
   $4 = nterm const_init_val ()
-> $$ = nterm const_def ()
Entering state 22
Stack now 0 5 3 13 22
Reducing stack by rule 8 (line 92):
   $1 = token "const" ()
   $2 = nterm b_type ()
   $3 = nterm const_def ()
-> $$ = nterm const_decl ()
Entering state 8
Stack now 0 5 8
Reading a token
Next token is token ";" ()
Shifting token ";" ()
Entering state 17
Stack now 0 5 8 17
Reducing stack by rule 10 (line 96):
   $1 = nterm const_decl ()
   $2 = token ";" ()
-> $$ = nterm const_decl_stmt ()
Entering state 9
Stack now 0 5 9
Reducing stack by rule 6 (line 85):
   $1 = nterm const_decl_stmt ()
-> $$ = nterm decl ()
Entering state 7
Stack now 0 5 7
Reducing stack by rule 5 (line 80):
   $1 = nterm decl ()
-> $$ = nterm comp_unit_item ()
Entering state 15
Stack now 0 5 15
Reducing stack by rule 3 (line 74):
   $1 = nterm comp_unit ()
   $2 = nterm comp_unit_item ()
-> $$ = nterm comp_unit ()
Entering state 5
Stack now 0 5
Reading a token
Next token is token "const" ()
Shifting token "const" ()
Entering state 3
Stack now 0 5 3
Reading a token
Next token is token "int" ()
Shifting token "int" ()
Entering state 2
Stack now 0 5 3 2
Reducing stack by rule 11 (line 100):
   $1 = token "int" ()
-> $$ = nterm b_type ()
Entering state 13
Stack now 0 5 3 13
Reading a token
Next token is token "identifier" ()
Shifting token "identifier" ()
Entering state 18
Stack now 0 5 3 13 18
Reducing stack by rule 46 (line 219):
   $1 = token "identifier" ()
-> $$ = nterm ident ()
Entering state 23
Stack now 0 5 3 13 23
Reducing stack by rule 14 (line 111):
-> $$ = nterm array_dims ()
Entering state 29
Stack now 0 5 3 13 23 29
Reading a token
Next token is token "[" ()
Shifting token "[" ()
Entering state 37
Stack now 0 5 3 13 23 29 37
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 3 13 23 29 37 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 3 13 23 29 37 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 3 13 23 29 37 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 3 13 23 29 37 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 3 13 23 29 37 55
Reading a token
Next token is token "]" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 3 13 23 29 37 57
Next token is token "]" ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 58
Stack now 0 5 3 13 23 29 37 58
Next token is token "]" ()
Shifting token "]" ()
Entering state 81
Stack now 0 5 3 13 23 29 37 58 81
Reducing stack by rule 15 (line 112):
   $1 = nterm array_dims ()
   $2 = token "[" ()
   $3 = nterm const_exp ()
   $4 = token "]" ()
-> $$ = nterm array_dims ()
Entering state 29
Stack now 0 5 3 13 23 29
Reading a token
Next token is token "[" ()
Shifting token "[" ()
Entering state 37
Stack now 0 5 3 13 23 29 37
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 3 13 23 29 37 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 3 13 23 29 37 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 3 13 23 29 37 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 3 13 23 29 37 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 3 13 23 29 37 55
Reading a token
Next token is token "]" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 3 13 23 29 37 57
Next token is token "]" ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 58
Stack now 0 5 3 13 23 29 37 58
Next token is token "]" ()
Shifting token "]" ()
Entering state 81
Stack now 0 5 3 13 23 29 37 58 81
Reducing stack by rule 15 (line 112):
   $1 = nterm array_dims ()
   $2 = token "[" ()
   $3 = nterm const_exp ()
   $4 = token "]" ()
-> $$ = nterm array_dims ()
Entering state 29
Stack now 0 5 3 13 23 29
Reading a token
Next token is token "=" ()
Shifting token "=" ()
Entering state 38
Stack now 0 5 3 13 23 29 38
Reading a token
Next token is token "{" ()
Shifting token "{" ()
Entering state 59
Stack now 0 5 3 13 23 29 38 59
Reading a token
Next token is token "{" ()
Shifting token "{" ()
Entering state 59
Stack now 0 5 3 13 23 29 38 59 59
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 3 13 23 29 38 59 59 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 3 13 23 29 38 59 59 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 3 13 23 29 38 59 59 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 3 13 23 29 38 59 59 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 3 13 23 29 38 59 59 55
Reading a token
Next token is token "," ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 3 13 23 29 38 59 59 57
Next token is token "," ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 61
Stack now 0 5 3 13 23 29 38 59 59 61
Reducing stack by rule 16 (line 117):
   $1 = nterm const_exp ()
-> $$ = nterm const_init_val ()
Entering state 82
Stack now 0 5 3 13 23 29 38 59 59 82
Reducing stack by rule 21 (line 130):
   $1 = nterm const_init_val ()
-> $$ = nterm real_const_array_elements ()
Entering state 84
Stack now 0 5 3 13 23 29 38 59 59 84
Next token is token "," ()
Shifting token "," ()
Entering state 102
Stack now 0 5 3 13 23 29 38 59 59 84 102
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 3 13 23 29 38 59 59 84 102 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 3 13 23 29 38 59 59 84 102 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 3 13 23 29 38 59 59 84 102 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 3 13 23 29 38 59 59 84 102 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 3 13 23 29 38 59 59 84 102 55
Reading a token
Next token is token "}" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 3 13 23 29 38 59 59 84 102 57
Next token is token "}" ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 61
Stack now 0 5 3 13 23 29 38 59 59 84 102 61
Reducing stack by rule 16 (line 117):
   $1 = nterm const_exp ()
-> $$ = nterm const_init_val ()
Entering state 122
Stack now 0 5 3 13 23 29 38 59 59 84 102 122
Reducing stack by rule 20 (line 129):
   $1 = nterm real_const_array_elements ()
   $2 = token "," ()
   $3 = nterm const_init_val ()
-> $$ = nterm real_const_array_elements ()
Entering state 84
Stack now 0 5 3 13 23 29 38 59 59 84
Next token is token "}" ()
Reducing stack by rule 19 (line 124):
   $1 = nterm real_const_array_elements ()
-> $$ = nterm const_array_elements ()
Entering state 83
Stack now 0 5 3 13 23 29 38 59 59 83
Next token is token "}" ()
Shifting token "}" ()
Entering state 101
Stack now 0 5 3 13 23 29 38 59 59 83 101
Reducing stack by rule 17 (line 118):
   $1 = token "{" ()
   $2 = nterm const_array_elements ()
   $3 = token "}" ()
-> $$ = nterm const_init_val ()
Entering state 82
Stack now 0 5 3 13 23 29 38 59 82
Reducing stack by rule 21 (line 130):
   $1 = nterm const_init_val ()
-> $$ = nterm real_const_array_elements ()
Entering state 84
Stack now 0 5 3 13 23 29 38 59 84
Reading a token
Next token is token "," ()
Shifting token "," ()
Entering state 102
Stack now 0 5 3 13 23 29 38 59 84 102
Reading a token
Next token is token "{" ()
Shifting token "{" ()
Entering state 59
Stack now 0 5 3 13 23 29 38 59 84 102 59
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 3 13 23 29 38 59 84 102 59 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 3 13 23 29 38 59 84 102 59 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 3 13 23 29 38 59 84 102 59 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 3 13 23 29 38 59 84 102 59 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 3 13 23 29 38 59 84 102 59 55
Reading a token
Next token is token "," ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 3 13 23 29 38 59 84 102 59 57
Next token is token "," ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 61
Stack now 0 5 3 13 23 29 38 59 84 102 59 61
Reducing stack by rule 16 (line 117):
   $1 = nterm const_exp ()
-> $$ = nterm const_init_val ()
Entering state 82
Stack now 0 5 3 13 23 29 38 59 84 102 59 82
Reducing stack by rule 21 (line 130):
   $1 = nterm const_init_val ()
-> $$ = nterm real_const_array_elements ()
Entering state 84
Stack now 0 5 3 13 23 29 38 59 84 102 59 84
Next token is token "," ()
Shifting token "," ()
Entering state 102
Stack now 0 5 3 13 23 29 38 59 84 102 59 84 102
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 3 13 23 29 38 59 84 102 59 84 102 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 3 13 23 29 38 59 84 102 59 84 102 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 3 13 23 29 38 59 84 102 59 84 102 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 3 13 23 29 38 59 84 102 59 84 102 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 3 13 23 29 38 59 84 102 59 84 102 55
Reading a token
Next token is token "}" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 3 13 23 29 38 59 84 102 59 84 102 57
Next token is token "}" ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 61
Stack now 0 5 3 13 23 29 38 59 84 102 59 84 102 61
Reducing stack by rule 16 (line 117):
   $1 = nterm const_exp ()
-> $$ = nterm const_init_val ()
Entering state 122
Stack now 0 5 3 13 23 29 38 59 84 102 59 84 102 122
Reducing stack by rule 20 (line 129):
   $1 = nterm real_const_array_elements ()
   $2 = token "," ()
   $3 = nterm const_init_val ()
-> $$ = nterm real_const_array_elements ()
Entering state 84
Stack now 0 5 3 13 23 29 38 59 84 102 59 84
Next token is token "}" ()
Reducing stack by rule 19 (line 124):
   $1 = nterm real_const_array_elements ()
-> $$ = nterm const_array_elements ()
Entering state 83
Stack now 0 5 3 13 23 29 38 59 84 102 59 83
Next token is token "}" ()
Shifting token "}" ()
Entering state 101
Stack now 0 5 3 13 23 29 38 59 84 102 59 83 101
Reducing stack by rule 17 (line 118):
   $1 = token "{" ()
   $2 = nterm const_array_elements ()
   $3 = token "}" ()
-> $$ = nterm const_init_val ()
Entering state 122
Stack now 0 5 3 13 23 29 38 59 84 102 122
Reducing stack by rule 20 (line 129):
   $1 = nterm real_const_array_elements ()
   $2 = token "," ()
   $3 = nterm const_init_val ()
-> $$ = nterm real_const_array_elements ()
Entering state 84
Stack now 0 5 3 13 23 29 38 59 84
Reading a token
Next token is token "," ()
Shifting token "," ()
Entering state 102
Stack now 0 5 3 13 23 29 38 59 84 102
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 3 13 23 29 38 59 84 102 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 3 13 23 29 38 59 84 102 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 3 13 23 29 38 59 84 102 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 3 13 23 29 38 59 84 102 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 3 13 23 29 38 59 84 102 55
Reading a token
Next token is token "," ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 3 13 23 29 38 59 84 102 57
Next token is token "," ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 61
Stack now 0 5 3 13 23 29 38 59 84 102 61
Reducing stack by rule 16 (line 117):
   $1 = nterm const_exp ()
-> $$ = nterm const_init_val ()
Entering state 122
Stack now 0 5 3 13 23 29 38 59 84 102 122
Reducing stack by rule 20 (line 129):
   $1 = nterm real_const_array_elements ()
   $2 = token "," ()
   $3 = nterm const_init_val ()
-> $$ = nterm real_const_array_elements ()
Entering state 84
Stack now 0 5 3 13 23 29 38 59 84
Next token is token "," ()
Shifting token "," ()
Entering state 102
Stack now 0 5 3 13 23 29 38 59 84 102
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 3 13 23 29 38 59 84 102 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 3 13 23 29 38 59 84 102 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 3 13 23 29 38 59 84 102 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 3 13 23 29 38 59 84 102 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 3 13 23 29 38 59 84 102 55
Reading a token
Next token is token "," ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 3 13 23 29 38 59 84 102 57
Next token is token "," ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 61
Stack now 0 5 3 13 23 29 38 59 84 102 61
Reducing stack by rule 16 (line 117):
   $1 = nterm const_exp ()
-> $$ = nterm const_init_val ()
Entering state 122
Stack now 0 5 3 13 23 29 38 59 84 102 122
Reducing stack by rule 20 (line 129):
   $1 = nterm real_const_array_elements ()
   $2 = token "," ()
   $3 = nterm const_init_val ()
-> $$ = nterm real_const_array_elements ()
Entering state 84
Stack now 0 5 3 13 23 29 38 59 84
Next token is token "," ()
Shifting token "," ()
Entering state 102
Stack now 0 5 3 13 23 29 38 59 84 102
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 3 13 23 29 38 59 84 102 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 3 13 23 29 38 59 84 102 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 3 13 23 29 38 59 84 102 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 3 13 23 29 38 59 84 102 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 3 13 23 29 38 59 84 102 55
Reading a token
Next token is token "," ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 3 13 23 29 38 59 84 102 57
Next token is token "," ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 61
Stack now 0 5 3 13 23 29 38 59 84 102 61
Reducing stack by rule 16 (line 117):
   $1 = nterm const_exp ()
-> $$ = nterm const_init_val ()
Entering state 122
Stack now 0 5 3 13 23 29 38 59 84 102 122
Reducing stack by rule 20 (line 129):
   $1 = nterm real_const_array_elements ()
   $2 = token "," ()
   $3 = nterm const_init_val ()
-> $$ = nterm real_const_array_elements ()
Entering state 84
Stack now 0 5 3 13 23 29 38 59 84
Next token is token "," ()
Shifting token "," ()
Entering state 102
Stack now 0 5 3 13 23 29 38 59 84 102
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 3 13 23 29 38 59 84 102 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 3 13 23 29 38 59 84 102 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 3 13 23 29 38 59 84 102 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 3 13 23 29 38 59 84 102 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 3 13 23 29 38 59 84 102 55
Reading a token
Next token is token "}" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 3 13 23 29 38 59 84 102 57
Next token is token "}" ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 61
Stack now 0 5 3 13 23 29 38 59 84 102 61
Reducing stack by rule 16 (line 117):
   $1 = nterm const_exp ()
-> $$ = nterm const_init_val ()
Entering state 122
Stack now 0 5 3 13 23 29 38 59 84 102 122
Reducing stack by rule 20 (line 129):
   $1 = nterm real_const_array_elements ()
   $2 = token "," ()
   $3 = nterm const_init_val ()
-> $$ = nterm real_const_array_elements ()
Entering state 84
Stack now 0 5 3 13 23 29 38 59 84
Next token is token "}" ()
Reducing stack by rule 19 (line 124):
   $1 = nterm real_const_array_elements ()
-> $$ = nterm const_array_elements ()
Entering state 83
Stack now 0 5 3 13 23 29 38 59 83
Next token is token "}" ()
Shifting token "}" ()
Entering state 101
Stack now 0 5 3 13 23 29 38 59 83 101
Reducing stack by rule 17 (line 118):
   $1 = token "{" ()
   $2 = nterm const_array_elements ()
   $3 = token "}" ()
-> $$ = nterm const_init_val ()
Entering state 60
Stack now 0 5 3 13 23 29 38 60
Reducing stack by rule 13 (line 105):
   $1 = nterm ident ()
   $2 = nterm array_dims ()
   $3 = token "=" ()
   $4 = nterm const_init_val ()
-> $$ = nterm const_def ()
Entering state 22
Stack now 0 5 3 13 22
Reducing stack by rule 8 (line 92):
   $1 = token "const" ()
   $2 = nterm b_type ()
   $3 = nterm const_def ()
-> $$ = nterm const_decl ()
Entering state 8
Stack now 0 5 8
Reading a token
Next token is token ";" ()
Shifting token ";" ()
Entering state 17
Stack now 0 5 8 17
Reducing stack by rule 10 (line 96):
   $1 = nterm const_decl ()
   $2 = token ";" ()
-> $$ = nterm const_decl_stmt ()
Entering state 9
Stack now 0 5 9
Reducing stack by rule 6 (line 85):
   $1 = nterm const_decl_stmt ()
-> $$ = nterm decl ()
Entering state 7
Stack now 0 5 7
Reducing stack by rule 5 (line 80):
   $1 = nterm decl ()
-> $$ = nterm comp_unit_item ()
Entering state 15
Stack now 0 5 15
Reducing stack by rule 3 (line 74):
   $1 = nterm comp_unit ()
   $2 = nterm comp_unit_item ()
-> $$ = nterm comp_unit ()
Entering state 5
Stack now 0 5
Reading a token
Next token is token "const" ()
Shifting token "const" ()
Entering state 3
Stack now 0 5 3
Reading a token
Next token is token "int" ()
Shifting token "int" ()
Entering state 2
Stack now 0 5 3 2
Reducing stack by rule 11 (line 100):
   $1 = token "int" ()
-> $$ = nterm b_type ()
Entering state 13
Stack now 0 5 3 13
Reading a token
Next token is token "identifier" ()
Shifting token "identifier" ()
Entering state 18
Stack now 0 5 3 13 18
Reducing stack by rule 46 (line 219):
   $1 = token "identifier" ()
-> $$ = nterm ident ()
Entering state 23
Stack now 0 5 3 13 23
Reducing stack by rule 14 (line 111):
-> $$ = nterm array_dims ()
Entering state 29
Stack now 0 5 3 13 23 29
Reading a token
Next token is token "[" ()
Shifting token "[" ()
Entering state 37
Stack now 0 5 3 13 23 29 37
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 3 13 23 29 37 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 3 13 23 29 37 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 3 13 23 29 37 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 3 13 23 29 37 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 3 13 23 29 37 55
Reading a token
Next token is token "]" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 3 13 23 29 37 57
Next token is token "]" ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 58
Stack now 0 5 3 13 23 29 37 58
Next token is token "]" ()
Shifting token "]" ()
Entering state 81
Stack now 0 5 3 13 23 29 37 58 81
Reducing stack by rule 15 (line 112):
   $1 = nterm array_dims ()
   $2 = token "[" ()
   $3 = nterm const_exp ()
   $4 = token "]" ()
-> $$ = nterm array_dims ()
Entering state 29
Stack now 0 5 3 13 23 29
Reading a token
Next token is token "[" ()
Shifting token "[" ()
Entering state 37
Stack now 0 5 3 13 23 29 37
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 3 13 23 29 37 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 3 13 23 29 37 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 3 13 23 29 37 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 3 13 23 29 37 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 3 13 23 29 37 55
Reading a token
Next token is token "]" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 3 13 23 29 37 57
Next token is token "]" ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 58
Stack now 0 5 3 13 23 29 37 58
Next token is token "]" ()
Shifting token "]" ()
Entering state 81
Stack now 0 5 3 13 23 29 37 58 81
Reducing stack by rule 15 (line 112):
   $1 = nterm array_dims ()
   $2 = token "[" ()
   $3 = nterm const_exp ()
   $4 = token "]" ()
-> $$ = nterm array_dims ()
Entering state 29
Stack now 0 5 3 13 23 29
Reading a token
Next token is token "=" ()
Shifting token "=" ()
Entering state 38
Stack now 0 5 3 13 23 29 38
Reading a token
Next token is token "{" ()
Shifting token "{" ()
Entering state 59
Stack now 0 5 3 13 23 29 38 59
Reading a token
Next token is token "{" ()
Shifting token "{" ()
Entering state 59
Stack now 0 5 3 13 23 29 38 59 59
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 3 13 23 29 38 59 59 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 3 13 23 29 38 59 59 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 3 13 23 29 38 59 59 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 3 13 23 29 38 59 59 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 3 13 23 29 38 59 59 55
Reading a token
Next token is token "," ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 3 13 23 29 38 59 59 57
Next token is token "," ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 61
Stack now 0 5 3 13 23 29 38 59 59 61
Reducing stack by rule 16 (line 117):
   $1 = nterm const_exp ()
-> $$ = nterm const_init_val ()
Entering state 82
Stack now 0 5 3 13 23 29 38 59 59 82
Reducing stack by rule 21 (line 130):
   $1 = nterm const_init_val ()
-> $$ = nterm real_const_array_elements ()
Entering state 84
Stack now 0 5 3 13 23 29 38 59 59 84
Next token is token "," ()
Shifting token "," ()
Entering state 102
Stack now 0 5 3 13 23 29 38 59 59 84 102
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 3 13 23 29 38 59 59 84 102 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 3 13 23 29 38 59 59 84 102 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 3 13 23 29 38 59 59 84 102 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 3 13 23 29 38 59 59 84 102 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 3 13 23 29 38 59 59 84 102 55
Reading a token
Next token is token "}" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 3 13 23 29 38 59 59 84 102 57
Next token is token "}" ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 61
Stack now 0 5 3 13 23 29 38 59 59 84 102 61
Reducing stack by rule 16 (line 117):
   $1 = nterm const_exp ()
-> $$ = nterm const_init_val ()
Entering state 122
Stack now 0 5 3 13 23 29 38 59 59 84 102 122
Reducing stack by rule 20 (line 129):
   $1 = nterm real_const_array_elements ()
   $2 = token "," ()
   $3 = nterm const_init_val ()
-> $$ = nterm real_const_array_elements ()
Entering state 84
Stack now 0 5 3 13 23 29 38 59 59 84
Next token is token "}" ()
Reducing stack by rule 19 (line 124):
   $1 = nterm real_const_array_elements ()
-> $$ = nterm const_array_elements ()
Entering state 83
Stack now 0 5 3 13 23 29 38 59 59 83
Next token is token "}" ()
Shifting token "}" ()
Entering state 101
Stack now 0 5 3 13 23 29 38 59 59 83 101
Reducing stack by rule 17 (line 118):
   $1 = token "{" ()
   $2 = nterm const_array_elements ()
   $3 = token "}" ()
-> $$ = nterm const_init_val ()
Entering state 82
Stack now 0 5 3 13 23 29 38 59 82
Reducing stack by rule 21 (line 130):
   $1 = nterm const_init_val ()
-> $$ = nterm real_const_array_elements ()
Entering state 84
Stack now 0 5 3 13 23 29 38 59 84
Reading a token
Next token is token "," ()
Shifting token "," ()
Entering state 102
Stack now 0 5 3 13 23 29 38 59 84 102
Reading a token
Next token is token "{" ()
Shifting token "{" ()
Entering state 59
Stack now 0 5 3 13 23 29 38 59 84 102 59
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 3 13 23 29 38 59 84 102 59 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 3 13 23 29 38 59 84 102 59 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 3 13 23 29 38 59 84 102 59 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 3 13 23 29 38 59 84 102 59 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 3 13 23 29 38 59 84 102 59 55
Reading a token
Next token is token "," ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 3 13 23 29 38 59 84 102 59 57
Next token is token "," ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 61
Stack now 0 5 3 13 23 29 38 59 84 102 59 61
Reducing stack by rule 16 (line 117):
   $1 = nterm const_exp ()
-> $$ = nterm const_init_val ()
Entering state 82
Stack now 0 5 3 13 23 29 38 59 84 102 59 82
Reducing stack by rule 21 (line 130):
   $1 = nterm const_init_val ()
-> $$ = nterm real_const_array_elements ()
Entering state 84
Stack now 0 5 3 13 23 29 38 59 84 102 59 84
Next token is token "," ()
Shifting token "," ()
Entering state 102
Stack now 0 5 3 13 23 29 38 59 84 102 59 84 102
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 3 13 23 29 38 59 84 102 59 84 102 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 3 13 23 29 38 59 84 102 59 84 102 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 3 13 23 29 38 59 84 102 59 84 102 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 3 13 23 29 38 59 84 102 59 84 102 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 3 13 23 29 38 59 84 102 59 84 102 55
Reading a token
Next token is token "}" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 3 13 23 29 38 59 84 102 59 84 102 57
Next token is token "}" ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 61
Stack now 0 5 3 13 23 29 38 59 84 102 59 84 102 61
Reducing stack by rule 16 (line 117):
   $1 = nterm const_exp ()
-> $$ = nterm const_init_val ()
Entering state 122
Stack now 0 5 3 13 23 29 38 59 84 102 59 84 102 122
Reducing stack by rule 20 (line 129):
   $1 = nterm real_const_array_elements ()
   $2 = token "," ()
   $3 = nterm const_init_val ()
-> $$ = nterm real_const_array_elements ()
Entering state 84
Stack now 0 5 3 13 23 29 38 59 84 102 59 84
Next token is token "}" ()
Reducing stack by rule 19 (line 124):
   $1 = nterm real_const_array_elements ()
-> $$ = nterm const_array_elements ()
Entering state 83
Stack now 0 5 3 13 23 29 38 59 84 102 59 83
Next token is token "}" ()
Shifting token "}" ()
Entering state 101
Stack now 0 5 3 13 23 29 38 59 84 102 59 83 101
Reducing stack by rule 17 (line 118):
   $1 = token "{" ()
   $2 = nterm const_array_elements ()
   $3 = token "}" ()
-> $$ = nterm const_init_val ()
Entering state 122
Stack now 0 5 3 13 23 29 38 59 84 102 122
Reducing stack by rule 20 (line 129):
   $1 = nterm real_const_array_elements ()
   $2 = token "," ()
   $3 = nterm const_init_val ()
-> $$ = nterm real_const_array_elements ()
Entering state 84
Stack now 0 5 3 13 23 29 38 59 84
Reading a token
Next token is token "," ()
Shifting token "," ()
Entering state 102
Stack now 0 5 3 13 23 29 38 59 84 102
Reading a token
Next token is token "{" ()
Shifting token "{" ()
Entering state 59
Stack now 0 5 3 13 23 29 38 59 84 102 59
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 3 13 23 29 38 59 84 102 59 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 3 13 23 29 38 59 84 102 59 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 3 13 23 29 38 59 84 102 59 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 3 13 23 29 38 59 84 102 59 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 3 13 23 29 38 59 84 102 59 55
Reading a token
Next token is token "," ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 3 13 23 29 38 59 84 102 59 57
Next token is token "," ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 61
Stack now 0 5 3 13 23 29 38 59 84 102 59 61
Reducing stack by rule 16 (line 117):
   $1 = nterm const_exp ()
-> $$ = nterm const_init_val ()
Entering state 82
Stack now 0 5 3 13 23 29 38 59 84 102 59 82
Reducing stack by rule 21 (line 130):
   $1 = nterm const_init_val ()
-> $$ = nterm real_const_array_elements ()
Entering state 84
Stack now 0 5 3 13 23 29 38 59 84 102 59 84
Next token is token "," ()
Shifting token "," ()
Entering state 102
Stack now 0 5 3 13 23 29 38 59 84 102 59 84 102
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 3 13 23 29 38 59 84 102 59 84 102 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 3 13 23 29 38 59 84 102 59 84 102 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 3 13 23 29 38 59 84 102 59 84 102 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 3 13 23 29 38 59 84 102 59 84 102 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 3 13 23 29 38 59 84 102 59 84 102 55
Reading a token
Next token is token "}" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 3 13 23 29 38 59 84 102 59 84 102 57
Next token is token "}" ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 61
Stack now 0 5 3 13 23 29 38 59 84 102 59 84 102 61
Reducing stack by rule 16 (line 117):
   $1 = nterm const_exp ()
-> $$ = nterm const_init_val ()
Entering state 122
Stack now 0 5 3 13 23 29 38 59 84 102 59 84 102 122
Reducing stack by rule 20 (line 129):
   $1 = nterm real_const_array_elements ()
   $2 = token "," ()
   $3 = nterm const_init_val ()
-> $$ = nterm real_const_array_elements ()
Entering state 84
Stack now 0 5 3 13 23 29 38 59 84 102 59 84
Next token is token "}" ()
Reducing stack by rule 19 (line 124):
   $1 = nterm real_const_array_elements ()
-> $$ = nterm const_array_elements ()
Entering state 83
Stack now 0 5 3 13 23 29 38 59 84 102 59 83
Next token is token "}" ()
Shifting token "}" ()
Entering state 101
Stack now 0 5 3 13 23 29 38 59 84 102 59 83 101
Reducing stack by rule 17 (line 118):
   $1 = token "{" ()
   $2 = nterm const_array_elements ()
   $3 = token "}" ()
-> $$ = nterm const_init_val ()
Entering state 122
Stack now 0 5 3 13 23 29 38 59 84 102 122
Reducing stack by rule 20 (line 129):
   $1 = nterm real_const_array_elements ()
   $2 = token "," ()
   $3 = nterm const_init_val ()
-> $$ = nterm real_const_array_elements ()
Entering state 84
Stack now 0 5 3 13 23 29 38 59 84
Reading a token
Next token is token "," ()
Shifting token "," ()
Entering state 102
Stack now 0 5 3 13 23 29 38 59 84 102
Reading a token
Next token is token "{" ()
Shifting token "{" ()
Entering state 59
Stack now 0 5 3 13 23 29 38 59 84 102 59
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 3 13 23 29 38 59 84 102 59 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 3 13 23 29 38 59 84 102 59 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 3 13 23 29 38 59 84 102 59 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 3 13 23 29 38 59 84 102 59 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 3 13 23 29 38 59 84 102 59 55
Reading a token
Next token is token "," ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 3 13 23 29 38 59 84 102 59 57
Next token is token "," ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 61
Stack now 0 5 3 13 23 29 38 59 84 102 59 61
Reducing stack by rule 16 (line 117):
   $1 = nterm const_exp ()
-> $$ = nterm const_init_val ()
Entering state 82
Stack now 0 5 3 13 23 29 38 59 84 102 59 82
Reducing stack by rule 21 (line 130):
   $1 = nterm const_init_val ()
-> $$ = nterm real_const_array_elements ()
Entering state 84
Stack now 0 5 3 13 23 29 38 59 84 102 59 84
Next token is token "," ()
Shifting token "," ()
Entering state 102
Stack now 0 5 3 13 23 29 38 59 84 102 59 84 102
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 3 13 23 29 38 59 84 102 59 84 102 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 3 13 23 29 38 59 84 102 59 84 102 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 3 13 23 29 38 59 84 102 59 84 102 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 3 13 23 29 38 59 84 102 59 84 102 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 3 13 23 29 38 59 84 102 59 84 102 55
Reading a token
Next token is token "}" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 3 13 23 29 38 59 84 102 59 84 102 57
Next token is token "}" ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 61
Stack now 0 5 3 13 23 29 38 59 84 102 59 84 102 61
Reducing stack by rule 16 (line 117):
   $1 = nterm const_exp ()
-> $$ = nterm const_init_val ()
Entering state 122
Stack now 0 5 3 13 23 29 38 59 84 102 59 84 102 122
Reducing stack by rule 20 (line 129):
   $1 = nterm real_const_array_elements ()
   $2 = token "," ()
   $3 = nterm const_init_val ()
-> $$ = nterm real_const_array_elements ()
Entering state 84
Stack now 0 5 3 13 23 29 38 59 84 102 59 84
Next token is token "}" ()
Reducing stack by rule 19 (line 124):
   $1 = nterm real_const_array_elements ()
-> $$ = nterm const_array_elements ()
Entering state 83
Stack now 0 5 3 13 23 29 38 59 84 102 59 83
Next token is token "}" ()
Shifting token "}" ()
Entering state 101
Stack now 0 5 3 13 23 29 38 59 84 102 59 83 101
Reducing stack by rule 17 (line 118):
   $1 = token "{" ()
   $2 = nterm const_array_elements ()
   $3 = token "}" ()
-> $$ = nterm const_init_val ()
Entering state 122
Stack now 0 5 3 13 23 29 38 59 84 102 122
Reducing stack by rule 20 (line 129):
   $1 = nterm real_const_array_elements ()
   $2 = token "," ()
   $3 = nterm const_init_val ()
-> $$ = nterm real_const_array_elements ()
Entering state 84
Stack now 0 5 3 13 23 29 38 59 84
Reading a token
Next token is token "}" ()
Reducing stack by rule 19 (line 124):
   $1 = nterm real_const_array_elements ()
-> $$ = nterm const_array_elements ()
Entering state 83
Stack now 0 5 3 13 23 29 38 59 83
Next token is token "}" ()
Shifting token "}" ()
Entering state 101
Stack now 0 5 3 13 23 29 38 59 83 101
Reducing stack by rule 17 (line 118):
   $1 = token "{" ()
   $2 = nterm const_array_elements ()
   $3 = token "}" ()
-> $$ = nterm const_init_val ()
Entering state 60
Stack now 0 5 3 13 23 29 38 60
Reducing stack by rule 13 (line 105):
   $1 = nterm ident ()
   $2 = nterm array_dims ()
   $3 = token "=" ()
   $4 = nterm const_init_val ()
-> $$ = nterm const_def ()
Entering state 22
Stack now 0 5 3 13 22
Reducing stack by rule 8 (line 92):
   $1 = token "const" ()
   $2 = nterm b_type ()
   $3 = nterm const_def ()
-> $$ = nterm const_decl ()
Entering state 8
Stack now 0 5 8
Reading a token
Next token is token ";" ()
Shifting token ";" ()
Entering state 17
Stack now 0 5 8 17
Reducing stack by rule 10 (line 96):
   $1 = nterm const_decl ()
   $2 = token ";" ()
-> $$ = nterm const_decl_stmt ()
Entering state 9
Stack now 0 5 9
Reducing stack by rule 6 (line 85):
   $1 = nterm const_decl_stmt ()
-> $$ = nterm decl ()
Entering state 7
Stack now 0 5 7
Reducing stack by rule 5 (line 80):
   $1 = nterm decl ()
-> $$ = nterm comp_unit_item ()
Entering state 15
Stack now 0 5 15
Reducing stack by rule 3 (line 74):
   $1 = nterm comp_unit ()
   $2 = nterm comp_unit_item ()
-> $$ = nterm comp_unit ()
Entering state 5
Stack now 0 5
Reading a token
Next token is token "const" ()
Shifting token "const" ()
Entering state 3
Stack now 0 5 3
Reading a token
Next token is token "int" ()
Shifting token "int" ()
Entering state 2
Stack now 0 5 3 2
Reducing stack by rule 11 (line 100):
   $1 = token "int" ()
-> $$ = nterm b_type ()
Entering state 13
Stack now 0 5 3 13
Reading a token
Next token is token "identifier" ()
Shifting token "identifier" ()
Entering state 18
Stack now 0 5 3 13 18
Reducing stack by rule 46 (line 219):
   $1 = token "identifier" ()
-> $$ = nterm ident ()
Entering state 23
Stack now 0 5 3 13 23
Reducing stack by rule 14 (line 111):
-> $$ = nterm array_dims ()
Entering state 29
Stack now 0 5 3 13 23 29
Reading a token
Next token is token "[" ()
Shifting token "[" ()
Entering state 37
Stack now 0 5 3 13 23 29 37
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 3 13 23 29 37 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 3 13 23 29 37 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 3 13 23 29 37 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 3 13 23 29 37 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 3 13 23 29 37 55
Reading a token
Next token is token "]" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 3 13 23 29 37 57
Next token is token "]" ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 58
Stack now 0 5 3 13 23 29 37 58
Next token is token "]" ()
Shifting token "]" ()
Entering state 81
Stack now 0 5 3 13 23 29 37 58 81
Reducing stack by rule 15 (line 112):
   $1 = nterm array_dims ()
   $2 = token "[" ()
   $3 = nterm const_exp ()
   $4 = token "]" ()
-> $$ = nterm array_dims ()
Entering state 29
Stack now 0 5 3 13 23 29
Reading a token
Next token is token "[" ()
Shifting token "[" ()
Entering state 37
Stack now 0 5 3 13 23 29 37
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 3 13 23 29 37 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 3 13 23 29 37 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 3 13 23 29 37 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 3 13 23 29 37 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 3 13 23 29 37 55
Reading a token
Next token is token "]" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 3 13 23 29 37 57
Next token is token "]" ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 58
Stack now 0 5 3 13 23 29 37 58
Next token is token "]" ()
Shifting token "]" ()
Entering state 81
Stack now 0 5 3 13 23 29 37 58 81
Reducing stack by rule 15 (line 112):
   $1 = nterm array_dims ()
   $2 = token "[" ()
   $3 = nterm const_exp ()
   $4 = token "]" ()
-> $$ = nterm array_dims ()
Entering state 29
Stack now 0 5 3 13 23 29
Reading a token
Next token is token "=" ()
Shifting token "=" ()
Entering state 38
Stack now 0 5 3 13 23 29 38
Reading a token
Next token is token "{" ()
Shifting token "{" ()
Entering state 59
Stack now 0 5 3 13 23 29 38 59
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 3 13 23 29 38 59 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 3 13 23 29 38 59 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 3 13 23 29 38 59 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 3 13 23 29 38 59 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 3 13 23 29 38 59 55
Reading a token
Next token is token "," ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 3 13 23 29 38 59 57
Next token is token "," ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 61
Stack now 0 5 3 13 23 29 38 59 61
Reducing stack by rule 16 (line 117):
   $1 = nterm const_exp ()
-> $$ = nterm const_init_val ()
Entering state 82
Stack now 0 5 3 13 23 29 38 59 82
Reducing stack by rule 21 (line 130):
   $1 = nterm const_init_val ()
-> $$ = nterm real_const_array_elements ()
Entering state 84
Stack now 0 5 3 13 23 29 38 59 84
Next token is token "," ()
Shifting token "," ()
Entering state 102
Stack now 0 5 3 13 23 29 38 59 84 102
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 3 13 23 29 38 59 84 102 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 3 13 23 29 38 59 84 102 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 3 13 23 29 38 59 84 102 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 3 13 23 29 38 59 84 102 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 3 13 23 29 38 59 84 102 55
Reading a token
Next token is token "," ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 3 13 23 29 38 59 84 102 57
Next token is token "," ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 61
Stack now 0 5 3 13 23 29 38 59 84 102 61
Reducing stack by rule 16 (line 117):
   $1 = nterm const_exp ()
-> $$ = nterm const_init_val ()
Entering state 122
Stack now 0 5 3 13 23 29 38 59 84 102 122
Reducing stack by rule 20 (line 129):
   $1 = nterm real_const_array_elements ()
   $2 = token "," ()
   $3 = nterm const_init_val ()
-> $$ = nterm real_const_array_elements ()
Entering state 84
Stack now 0 5 3 13 23 29 38 59 84
Next token is token "," ()
Shifting token "," ()
Entering state 102
Stack now 0 5 3 13 23 29 38 59 84 102
Reading a token
Next token is token "{" ()
Shifting token "{" ()
Entering state 59
Stack now 0 5 3 13 23 29 38 59 84 102 59
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 3 13 23 29 38 59 84 102 59 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 3 13 23 29 38 59 84 102 59 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 3 13 23 29 38 59 84 102 59 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 3 13 23 29 38 59 84 102 59 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 3 13 23 29 38 59 84 102 59 55
Reading a token
Next token is token "}" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 3 13 23 29 38 59 84 102 59 57
Next token is token "}" ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 61
Stack now 0 5 3 13 23 29 38 59 84 102 59 61
Reducing stack by rule 16 (line 117):
   $1 = nterm const_exp ()
-> $$ = nterm const_init_val ()
Entering state 82
Stack now 0 5 3 13 23 29 38 59 84 102 59 82
Reducing stack by rule 21 (line 130):
   $1 = nterm const_init_val ()
-> $$ = nterm real_const_array_elements ()
Entering state 84
Stack now 0 5 3 13 23 29 38 59 84 102 59 84
Next token is token "}" ()
Reducing stack by rule 19 (line 124):
   $1 = nterm real_const_array_elements ()
-> $$ = nterm const_array_elements ()
Entering state 83
Stack now 0 5 3 13 23 29 38 59 84 102 59 83
Next token is token "}" ()
Shifting token "}" ()
Entering state 101
Stack now 0 5 3 13 23 29 38 59 84 102 59 83 101
Reducing stack by rule 17 (line 118):
   $1 = token "{" ()
   $2 = nterm const_array_elements ()
   $3 = token "}" ()
-> $$ = nterm const_init_val ()
Entering state 122
Stack now 0 5 3 13 23 29 38 59 84 102 122
Reducing stack by rule 20 (line 129):
   $1 = nterm real_const_array_elements ()
   $2 = token "," ()
   $3 = nterm const_init_val ()
-> $$ = nterm real_const_array_elements ()
Entering state 84
Stack now 0 5 3 13 23 29 38 59 84
Reading a token
Next token is token "," ()
Shifting token "," ()
Entering state 102
Stack now 0 5 3 13 23 29 38 59 84 102
Reading a token
Next token is token "{" ()
Shifting token "{" ()
Entering state 59
Stack now 0 5 3 13 23 29 38 59 84 102 59
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 3 13 23 29 38 59 84 102 59 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 3 13 23 29 38 59 84 102 59 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 3 13 23 29 38 59 84 102 59 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 3 13 23 29 38 59 84 102 59 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 3 13 23 29 38 59 84 102 59 55
Reading a token
Next token is token "}" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 3 13 23 29 38 59 84 102 59 57
Next token is token "}" ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 61
Stack now 0 5 3 13 23 29 38 59 84 102 59 61
Reducing stack by rule 16 (line 117):
   $1 = nterm const_exp ()
-> $$ = nterm const_init_val ()
Entering state 82
Stack now 0 5 3 13 23 29 38 59 84 102 59 82
Reducing stack by rule 21 (line 130):
   $1 = nterm const_init_val ()
-> $$ = nterm real_const_array_elements ()
Entering state 84
Stack now 0 5 3 13 23 29 38 59 84 102 59 84
Next token is token "}" ()
Reducing stack by rule 19 (line 124):
   $1 = nterm real_const_array_elements ()
-> $$ = nterm const_array_elements ()
Entering state 83
Stack now 0 5 3 13 23 29 38 59 84 102 59 83
Next token is token "}" ()
Shifting token "}" ()
Entering state 101
Stack now 0 5 3 13 23 29 38 59 84 102 59 83 101
Reducing stack by rule 17 (line 118):
   $1 = token "{" ()
   $2 = nterm const_array_elements ()
   $3 = token "}" ()
-> $$ = nterm const_init_val ()
Entering state 122
Stack now 0 5 3 13 23 29 38 59 84 102 122
Reducing stack by rule 20 (line 129):
   $1 = nterm real_const_array_elements ()
   $2 = token "," ()
   $3 = nterm const_init_val ()
-> $$ = nterm real_const_array_elements ()
Entering state 84
Stack now 0 5 3 13 23 29 38 59 84
Reading a token
Next token is token "," ()
Shifting token "," ()
Entering state 102
Stack now 0 5 3 13 23 29 38 59 84 102
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 3 13 23 29 38 59 84 102 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 3 13 23 29 38 59 84 102 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 3 13 23 29 38 59 84 102 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 3 13 23 29 38 59 84 102 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 3 13 23 29 38 59 84 102 55
Reading a token
Next token is token "," ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 3 13 23 29 38 59 84 102 57
Next token is token "," ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 61
Stack now 0 5 3 13 23 29 38 59 84 102 61
Reducing stack by rule 16 (line 117):
   $1 = nterm const_exp ()
-> $$ = nterm const_init_val ()
Entering state 122
Stack now 0 5 3 13 23 29 38 59 84 102 122
Reducing stack by rule 20 (line 129):
   $1 = nterm real_const_array_elements ()
   $2 = token "," ()
   $3 = nterm const_init_val ()
-> $$ = nterm real_const_array_elements ()
Entering state 84
Stack now 0 5 3 13 23 29 38 59 84
Next token is token "," ()
Shifting token "," ()
Entering state 102
Stack now 0 5 3 13 23 29 38 59 84 102
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 3 13 23 29 38 59 84 102 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 3 13 23 29 38 59 84 102 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 3 13 23 29 38 59 84 102 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 3 13 23 29 38 59 84 102 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 3 13 23 29 38 59 84 102 55
Reading a token
Next token is token "}" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 3 13 23 29 38 59 84 102 57
Next token is token "}" ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 61
Stack now 0 5 3 13 23 29 38 59 84 102 61
Reducing stack by rule 16 (line 117):
   $1 = nterm const_exp ()
-> $$ = nterm const_init_val ()
Entering state 122
Stack now 0 5 3 13 23 29 38 59 84 102 122
Reducing stack by rule 20 (line 129):
   $1 = nterm real_const_array_elements ()
   $2 = token "," ()
   $3 = nterm const_init_val ()
-> $$ = nterm real_const_array_elements ()
Entering state 84
Stack now 0 5 3 13 23 29 38 59 84
Next token is token "}" ()
Reducing stack by rule 19 (line 124):
   $1 = nterm real_const_array_elements ()
-> $$ = nterm const_array_elements ()
Entering state 83
Stack now 0 5 3 13 23 29 38 59 83
Next token is token "}" ()
Shifting token "}" ()
Entering state 101
Stack now 0 5 3 13 23 29 38 59 83 101
Reducing stack by rule 17 (line 118):
   $1 = token "{" ()
   $2 = nterm const_array_elements ()
   $3 = token "}" ()
-> $$ = nterm const_init_val ()
Entering state 60
Stack now 0 5 3 13 23 29 38 60
Reducing stack by rule 13 (line 105):
   $1 = nterm ident ()
   $2 = nterm array_dims ()
   $3 = token "=" ()
   $4 = nterm const_init_val ()
-> $$ = nterm const_def ()
Entering state 22
Stack now 0 5 3 13 22
Reducing stack by rule 8 (line 92):
   $1 = token "const" ()
   $2 = nterm b_type ()
   $3 = nterm const_def ()
-> $$ = nterm const_decl ()
Entering state 8
Stack now 0 5 8
Reading a token
Next token is token ";" ()
Shifting token ";" ()
Entering state 17
Stack now 0 5 8 17
Reducing stack by rule 10 (line 96):
   $1 = nterm const_decl ()
   $2 = token ";" ()
-> $$ = nterm const_decl_stmt ()
Entering state 9
Stack now 0 5 9
Reducing stack by rule 6 (line 85):
   $1 = nterm const_decl_stmt ()
-> $$ = nterm decl ()
Entering state 7
Stack now 0 5 7
Reducing stack by rule 5 (line 80):
   $1 = nterm decl ()
-> $$ = nterm comp_unit_item ()
Entering state 15
Stack now 0 5 15
Reducing stack by rule 3 (line 74):
   $1 = nterm comp_unit ()
   $2 = nterm comp_unit_item ()
-> $$ = nterm comp_unit ()
Entering state 5
Stack now 0 5
Reading a token
Next token is token "const" ()
Shifting token "const" ()
Entering state 3
Stack now 0 5 3
Reading a token
Next token is token "int" ()
Shifting token "int" ()
Entering state 2
Stack now 0 5 3 2
Reducing stack by rule 11 (line 100):
   $1 = token "int" ()
-> $$ = nterm b_type ()
Entering state 13
Stack now 0 5 3 13
Reading a token
Next token is token "identifier" ()
Shifting token "identifier" ()
Entering state 18
Stack now 0 5 3 13 18
Reducing stack by rule 46 (line 219):
   $1 = token "identifier" ()
-> $$ = nterm ident ()
Entering state 23
Stack now 0 5 3 13 23
Reducing stack by rule 14 (line 111):
-> $$ = nterm array_dims ()
Entering state 29
Stack now 0 5 3 13 23 29
Reading a token
Next token is token "=" ()
Shifting token "=" ()
Entering state 38
Stack now 0 5 3 13 23 29 38
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 3 13 23 29 38 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 3 13 23 29 38 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 3 13 23 29 38 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 3 13 23 29 38 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 3 13 23 29 38 55
Reading a token
Next token is token ";" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 3 13 23 29 38 57
Next token is token ";" ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 61
Stack now 0 5 3 13 23 29 38 61
Reducing stack by rule 16 (line 117):
   $1 = nterm const_exp ()
-> $$ = nterm const_init_val ()
Entering state 60
Stack now 0 5 3 13 23 29 38 60
Reducing stack by rule 13 (line 105):
   $1 = nterm ident ()
   $2 = nterm array_dims ()
   $3 = token "=" ()
   $4 = nterm const_init_val ()
-> $$ = nterm const_def ()
Entering state 22
Stack now 0 5 3 13 22
Reducing stack by rule 8 (line 92):
   $1 = token "const" ()
   $2 = nterm b_type ()
   $3 = nterm const_def ()
-> $$ = nterm const_decl ()
Entering state 8
Stack now 0 5 8
Next token is token ";" ()
Shifting token ";" ()
Entering state 17
Stack now 0 5 8 17
Reducing stack by rule 10 (line 96):
   $1 = nterm const_decl ()
   $2 = token ";" ()
-> $$ = nterm const_decl_stmt ()
Entering state 9
Stack now 0 5 9
Reducing stack by rule 6 (line 85):
   $1 = nterm const_decl_stmt ()
-> $$ = nterm decl ()
Entering state 7
Stack now 0 5 7
Reducing stack by rule 5 (line 80):
   $1 = nterm decl ()
-> $$ = nterm comp_unit_item ()
Entering state 15
Stack now 0 5 15
Reducing stack by rule 3 (line 74):
   $1 = nterm comp_unit ()
   $2 = nterm comp_unit_item ()
-> $$ = nterm comp_unit ()
Entering state 5
Stack now 0 5
Reading a token
Next token is token "const" ()
Shifting token "const" ()
Entering state 3
Stack now 0 5 3
Reading a token
Next token is token "int" ()
Shifting token "int" ()
Entering state 2
Stack now 0 5 3 2
Reducing stack by rule 11 (line 100):
   $1 = token "int" ()
-> $$ = nterm b_type ()
Entering state 13
Stack now 0 5 3 13
Reading a token
Next token is token "identifier" ()
Shifting token "identifier" ()
Entering state 18
Stack now 0 5 3 13 18
Reducing stack by rule 46 (line 219):
   $1 = token "identifier" ()
-> $$ = nterm ident ()
Entering state 23
Stack now 0 5 3 13 23
Reducing stack by rule 14 (line 111):
-> $$ = nterm array_dims ()
Entering state 29
Stack now 0 5 3 13 23 29
Reading a token
Next token is token "[" ()
Shifting token "[" ()
Entering state 37
Stack now 0 5 3 13 23 29 37
Reading a token
Next token is token "identifier" ()
Shifting token "identifier" ()
Entering state 18
Stack now 0 5 3 13 23 29 37 18
Reducing stack by rule 46 (line 219):
   $1 = token "identifier" ()
-> $$ = nterm ident ()
Entering state 49
Stack now 0 5 3 13 23 29 37 49
Reading a token
Next token is token "]" ()
Reducing stack by rule 61 (line 247):
   $1 = nterm ident ()
-> $$ = nterm l_val ()
Entering state 51
Stack now 0 5 3 13 23 29 37 51
Reducing stack by rule 65 (line 259):
   $1 = nterm l_val ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 3 13 23 29 37 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 3 13 23 29 37 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 3 13 23 29 37 55
Next token is token "]" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 3 13 23 29 37 57
Next token is token "]" ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 58
Stack now 0 5 3 13 23 29 37 58
Next token is token "]" ()
Shifting token "]" ()
Entering state 81
Stack now 0 5 3 13 23 29 37 58 81
Reducing stack by rule 15 (line 112):
   $1 = nterm array_dims ()
   $2 = token "[" ()
   $3 = nterm const_exp ()
   $4 = token "]" ()
-> $$ = nterm array_dims ()
Entering state 29
Stack now 0 5 3 13 23 29
Reading a token
Next token is token "=" ()
Shifting token "=" ()
Entering state 38
Stack now 0 5 3 13 23 29 38
Reading a token
Next token is token "{" ()
Shifting token "{" ()
Entering state 59
Stack now 0 5 3 13 23 29 38 59
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 3 13 23 29 38 59 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 3 13 23 29 38 59 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 3 13 23 29 38 59 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 3 13 23 29 38 59 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 3 13 23 29 38 59 55
Reading a token
Next token is token "," ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 3 13 23 29 38 59 57
Next token is token "," ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 61
Stack now 0 5 3 13 23 29 38 59 61
Reducing stack by rule 16 (line 117):
   $1 = nterm const_exp ()
-> $$ = nterm const_init_val ()
Entering state 82
Stack now 0 5 3 13 23 29 38 59 82
Reducing stack by rule 21 (line 130):
   $1 = nterm const_init_val ()
-> $$ = nterm real_const_array_elements ()
Entering state 84
Stack now 0 5 3 13 23 29 38 59 84
Next token is token "," ()
Shifting token "," ()
Entering state 102
Stack now 0 5 3 13 23 29 38 59 84 102
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 3 13 23 29 38 59 84 102 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 3 13 23 29 38 59 84 102 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 3 13 23 29 38 59 84 102 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 3 13 23 29 38 59 84 102 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 3 13 23 29 38 59 84 102 55
Reading a token
Next token is token "," ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 3 13 23 29 38 59 84 102 57
Next token is token "," ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 61
Stack now 0 5 3 13 23 29 38 59 84 102 61
Reducing stack by rule 16 (line 117):
   $1 = nterm const_exp ()
-> $$ = nterm const_init_val ()
Entering state 122
Stack now 0 5 3 13 23 29 38 59 84 102 122
Reducing stack by rule 20 (line 129):
   $1 = nterm real_const_array_elements ()
   $2 = token "," ()
   $3 = nterm const_init_val ()
-> $$ = nterm real_const_array_elements ()
Entering state 84
Stack now 0 5 3 13 23 29 38 59 84
Next token is token "," ()
Shifting token "," ()
Entering state 102
Stack now 0 5 3 13 23 29 38 59 84 102
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 3 13 23 29 38 59 84 102 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 3 13 23 29 38 59 84 102 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 3 13 23 29 38 59 84 102 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 3 13 23 29 38 59 84 102 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 3 13 23 29 38 59 84 102 55
Reading a token
Next token is token "," ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 3 13 23 29 38 59 84 102 57
Next token is token "," ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 61
Stack now 0 5 3 13 23 29 38 59 84 102 61
Reducing stack by rule 16 (line 117):
   $1 = nterm const_exp ()
-> $$ = nterm const_init_val ()
Entering state 122
Stack now 0 5 3 13 23 29 38 59 84 102 122
Reducing stack by rule 20 (line 129):
   $1 = nterm real_const_array_elements ()
   $2 = token "," ()
   $3 = nterm const_init_val ()
-> $$ = nterm real_const_array_elements ()
Entering state 84
Stack now 0 5 3 13 23 29 38 59 84
Next token is token "," ()
Shifting token "," ()
Entering state 102
Stack now 0 5 3 13 23 29 38 59 84 102
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 3 13 23 29 38 59 84 102 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 3 13 23 29 38 59 84 102 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 3 13 23 29 38 59 84 102 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 3 13 23 29 38 59 84 102 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 3 13 23 29 38 59 84 102 55
Reading a token
Next token is token "," ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 3 13 23 29 38 59 84 102 57
Next token is token "," ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 61
Stack now 0 5 3 13 23 29 38 59 84 102 61
Reducing stack by rule 16 (line 117):
   $1 = nterm const_exp ()
-> $$ = nterm const_init_val ()
Entering state 122
Stack now 0 5 3 13 23 29 38 59 84 102 122
Reducing stack by rule 20 (line 129):
   $1 = nterm real_const_array_elements ()
   $2 = token "," ()
   $3 = nterm const_init_val ()
-> $$ = nterm real_const_array_elements ()
Entering state 84
Stack now 0 5 3 13 23 29 38 59 84
Next token is token "," ()
Shifting token "," ()
Entering state 102
Stack now 0 5 3 13 23 29 38 59 84 102
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 3 13 23 29 38 59 84 102 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 3 13 23 29 38 59 84 102 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 3 13 23 29 38 59 84 102 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 3 13 23 29 38 59 84 102 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 3 13 23 29 38 59 84 102 55
Reading a token
Next token is token "," ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 3 13 23 29 38 59 84 102 57
Next token is token "," ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 61
Stack now 0 5 3 13 23 29 38 59 84 102 61
Reducing stack by rule 16 (line 117):
   $1 = nterm const_exp ()
-> $$ = nterm const_init_val ()
Entering state 122
Stack now 0 5 3 13 23 29 38 59 84 102 122
Reducing stack by rule 20 (line 129):
   $1 = nterm real_const_array_elements ()
   $2 = token "," ()
   $3 = nterm const_init_val ()
-> $$ = nterm real_const_array_elements ()
Entering state 84
Stack now 0 5 3 13 23 29 38 59 84
Next token is token "," ()
Shifting token "," ()
Entering state 102
Stack now 0 5 3 13 23 29 38 59 84 102
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 3 13 23 29 38 59 84 102 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 3 13 23 29 38 59 84 102 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 3 13 23 29 38 59 84 102 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 3 13 23 29 38 59 84 102 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 3 13 23 29 38 59 84 102 55
Reading a token
Next token is token "," ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 3 13 23 29 38 59 84 102 57
Next token is token "," ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 61
Stack now 0 5 3 13 23 29 38 59 84 102 61
Reducing stack by rule 16 (line 117):
   $1 = nterm const_exp ()
-> $$ = nterm const_init_val ()
Entering state 122
Stack now 0 5 3 13 23 29 38 59 84 102 122
Reducing stack by rule 20 (line 129):
   $1 = nterm real_const_array_elements ()
   $2 = token "," ()
   $3 = nterm const_init_val ()
-> $$ = nterm real_const_array_elements ()
Entering state 84
Stack now 0 5 3 13 23 29 38 59 84
Next token is token "," ()
Shifting token "," ()
Entering state 102
Stack now 0 5 3 13 23 29 38 59 84 102
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 3 13 23 29 38 59 84 102 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 3 13 23 29 38 59 84 102 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 3 13 23 29 38 59 84 102 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 3 13 23 29 38 59 84 102 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 3 13 23 29 38 59 84 102 55
Reading a token
Next token is token "," ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 3 13 23 29 38 59 84 102 57
Next token is token "," ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 61
Stack now 0 5 3 13 23 29 38 59 84 102 61
Reducing stack by rule 16 (line 117):
   $1 = nterm const_exp ()
-> $$ = nterm const_init_val ()
Entering state 122
Stack now 0 5 3 13 23 29 38 59 84 102 122
Reducing stack by rule 20 (line 129):
   $1 = nterm real_const_array_elements ()
   $2 = token "," ()
   $3 = nterm const_init_val ()
-> $$ = nterm real_const_array_elements ()
Entering state 84
Stack now 0 5 3 13 23 29 38 59 84
Next token is token "," ()
Shifting token "," ()
Entering state 102
Stack now 0 5 3 13 23 29 38 59 84 102
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 3 13 23 29 38 59 84 102 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 3 13 23 29 38 59 84 102 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 3 13 23 29 38 59 84 102 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 3 13 23 29 38 59 84 102 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 3 13 23 29 38 59 84 102 55
Reading a token
Next token is token "," ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 3 13 23 29 38 59 84 102 57
Next token is token "," ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 61
Stack now 0 5 3 13 23 29 38 59 84 102 61
Reducing stack by rule 16 (line 117):
   $1 = nterm const_exp ()
-> $$ = nterm const_init_val ()
Entering state 122
Stack now 0 5 3 13 23 29 38 59 84 102 122
Reducing stack by rule 20 (line 129):
   $1 = nterm real_const_array_elements ()
   $2 = token "," ()
   $3 = nterm const_init_val ()
-> $$ = nterm real_const_array_elements ()
Entering state 84
Stack now 0 5 3 13 23 29 38 59 84
Next token is token "," ()
Shifting token "," ()
Entering state 102
Stack now 0 5 3 13 23 29 38 59 84 102
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 3 13 23 29 38 59 84 102 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 3 13 23 29 38 59 84 102 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 3 13 23 29 38 59 84 102 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 3 13 23 29 38 59 84 102 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 3 13 23 29 38 59 84 102 55
Reading a token
Next token is token "," ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 3 13 23 29 38 59 84 102 57
Next token is token "," ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 61
Stack now 0 5 3 13 23 29 38 59 84 102 61
Reducing stack by rule 16 (line 117):
   $1 = nterm const_exp ()
-> $$ = nterm const_init_val ()
Entering state 122
Stack now 0 5 3 13 23 29 38 59 84 102 122
Reducing stack by rule 20 (line 129):
   $1 = nterm real_const_array_elements ()
   $2 = token "," ()
   $3 = nterm const_init_val ()
-> $$ = nterm real_const_array_elements ()
Entering state 84
Stack now 0 5 3 13 23 29 38 59 84
Next token is token "," ()
Shifting token "," ()
Entering state 102
Stack now 0 5 3 13 23 29 38 59 84 102
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 3 13 23 29 38 59 84 102 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 3 13 23 29 38 59 84 102 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 3 13 23 29 38 59 84 102 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 3 13 23 29 38 59 84 102 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 3 13 23 29 38 59 84 102 55
Reading a token
Next token is token "}" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 3 13 23 29 38 59 84 102 57
Next token is token "}" ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 61
Stack now 0 5 3 13 23 29 38 59 84 102 61
Reducing stack by rule 16 (line 117):
   $1 = nterm const_exp ()
-> $$ = nterm const_init_val ()
Entering state 122
Stack now 0 5 3 13 23 29 38 59 84 102 122
Reducing stack by rule 20 (line 129):
   $1 = nterm real_const_array_elements ()
   $2 = token "," ()
   $3 = nterm const_init_val ()
-> $$ = nterm real_const_array_elements ()
Entering state 84
Stack now 0 5 3 13 23 29 38 59 84
Next token is token "}" ()
Reducing stack by rule 19 (line 124):
   $1 = nterm real_const_array_elements ()
-> $$ = nterm const_array_elements ()
Entering state 83
Stack now 0 5 3 13 23 29 38 59 83
Next token is token "}" ()
Shifting token "}" ()
Entering state 101
Stack now 0 5 3 13 23 29 38 59 83 101
Reducing stack by rule 17 (line 118):
   $1 = token "{" ()
   $2 = nterm const_array_elements ()
   $3 = token "}" ()
-> $$ = nterm const_init_val ()
Entering state 60
Stack now 0 5 3 13 23 29 38 60
Reducing stack by rule 13 (line 105):
   $1 = nterm ident ()
   $2 = nterm array_dims ()
   $3 = token "=" ()
   $4 = nterm const_init_val ()
-> $$ = nterm const_def ()
Entering state 22
Stack now 0 5 3 13 22
Reducing stack by rule 8 (line 92):
   $1 = token "const" ()
   $2 = nterm b_type ()
   $3 = nterm const_def ()
-> $$ = nterm const_decl ()
Entering state 8
Stack now 0 5 8
Reading a token
Next token is token ";" ()
Shifting token ";" ()
Entering state 17
Stack now 0 5 8 17
Reducing stack by rule 10 (line 96):
   $1 = nterm const_decl ()
   $2 = token ";" ()
-> $$ = nterm const_decl_stmt ()
Entering state 9
Stack now 0 5 9
Reducing stack by rule 6 (line 85):
   $1 = nterm const_decl_stmt ()
-> $$ = nterm decl ()
Entering state 7
Stack now 0 5 7
Reducing stack by rule 5 (line 80):
   $1 = nterm decl ()
-> $$ = nterm comp_unit_item ()
Entering state 15
Stack now 0 5 15
Reducing stack by rule 3 (line 74):
   $1 = nterm comp_unit ()
   $2 = nterm comp_unit_item ()
-> $$ = nterm comp_unit ()
Entering state 5
Stack now 0 5
Reading a token
Next token is token "int" ()
Shifting token "int" ()
Entering state 2
Stack now 0 5 2
Reducing stack by rule 11 (line 100):
   $1 = token "int" ()
-> $$ = nterm b_type ()
Entering state 10
Stack now 0 5 10
Reading a token
Next token is token "identifier" ()
Shifting token "identifier" ()
Entering state 18
Stack now 0 5 10 18
Reducing stack by rule 46 (line 219):
   $1 = token "identifier" ()
-> $$ = nterm ident ()
Entering state 21
Stack now 0 5 10 21
Reading a token
Next token is token "[" ()
Reducing stack by rule 14 (line 111):
-> $$ = nterm array_dims ()
Entering state 28
Stack now 0 5 10 21 28
Next token is token "[" ()
Shifting token "[" ()
Entering state 37
Stack now 0 5 10 21 28 37
Reading a token
Next token is token "identifier" ()
Shifting token "identifier" ()
Entering state 18
Stack now 0 5 10 21 28 37 18
Reducing stack by rule 46 (line 219):
   $1 = token "identifier" ()
-> $$ = nterm ident ()
Entering state 49
Stack now 0 5 10 21 28 37 49
Reading a token
Next token is token "]" ()
Reducing stack by rule 61 (line 247):
   $1 = nterm ident ()
-> $$ = nterm l_val ()
Entering state 51
Stack now 0 5 10 21 28 37 51
Reducing stack by rule 65 (line 259):
   $1 = nterm l_val ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 10 21 28 37 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 10 21 28 37 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 10 21 28 37 55
Next token is token "]" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 57
Stack now 0 5 10 21 28 37 57
Next token is token "]" ()
Reducing stack by rule 96 (line 340):
   $1 = nterm add_exp ()
-> $$ = nterm const_exp ()
Entering state 58
Stack now 0 5 10 21 28 37 58
Next token is token "]" ()
Shifting token "]" ()
Entering state 81
Stack now 0 5 10 21 28 37 58 81
Reducing stack by rule 15 (line 112):
   $1 = nterm array_dims ()
   $2 = token "[" ()
   $3 = nterm const_exp ()
   $4 = token "]" ()
-> $$ = nterm array_dims ()
Entering state 28
Stack now 0 5 10 21 28
Reading a token
Next token is token ";" ()
Reducing stack by rule 25 (line 148):
   $1 = nterm ident ()
   $2 = nterm array_dims ()
-> $$ = nterm var_def ()
Entering state 20
Stack now 0 5 10 20
Reducing stack by rule 23 (line 142):
   $1 = nterm var_def ()
-> $$ = nterm var_def_list ()
Entering state 19
Stack now 0 5 10 19
Next token is token ";" ()
Shifting token ";" ()
Entering state 26
Stack now 0 5 10 19 26
Reducing stack by rule 22 (line 135):
   $1 = nterm b_type ()
   $2 = nterm var_def_list ()
   $3 = token ";" ()
-> $$ = nterm var_decl ()
Entering state 11
Stack now 0 5 11
Reducing stack by rule 7 (line 86):
   $1 = nterm var_decl ()
-> $$ = nterm decl ()
Entering state 7
Stack now 0 5 7
Reducing stack by rule 5 (line 80):
   $1 = nterm decl ()
-> $$ = nterm comp_unit_item ()
Entering state 15
Stack now 0 5 15
Reducing stack by rule 3 (line 74):
   $1 = nterm comp_unit ()
   $2 = nterm comp_unit_item ()
-> $$ = nterm comp_unit ()
Entering state 5
Stack now 0 5
Reading a token
Next token is token "int" ()
Shifting token "int" ()
Entering state 2
Stack now 0 5 2
Reducing stack by rule 11 (line 100):
   $1 = token "int" ()
-> $$ = nterm b_type ()
Entering state 10
Stack now 0 5 10
Reading a token
Next token is token "identifier" ()
Shifting token "identifier" ()
Entering state 18
Stack now 0 5 10 18
Reducing stack by rule 46 (line 219):
   $1 = token "identifier" ()
-> $$ = nterm ident ()
Entering state 21
Stack now 0 5 10 21
Reading a token
Next token is token "(" ()
Shifting token "(" ()
Entering state 27
Stack now 0 5 10 21 27
Reading a token
Next token is token "int" ()
Shifting token "int" ()
Entering state 2
Stack now 0 5 10 21 27 2
Reducing stack by rule 11 (line 100):
   $1 = token "int" ()
-> $$ = nterm b_type ()
Entering state 32
Stack now 0 5 10 21 27 32
Reading a token
Next token is token "identifier" ()
Shifting token "identifier" ()
Entering state 18
Stack now 0 5 10 21 27 32 18
Reducing stack by rule 46 (line 219):
   $1 = token "identifier" ()
-> $$ = nterm ident ()
Entering state 39
Stack now 0 5 10 21 27 32 39
Reading a token
Next token is token ")" ()
Reducing stack by rule 37 (line 194):
-> $$ = nterm array_dims_func_param ()
Entering state 63
Stack now 0 5 10 21 27 32 39 63
Reducing stack by rule 36 (line 185):
   $1 = nterm b_type ()
   $2 = nterm ident ()
   $3 = nterm array_dims_func_param ()
-> $$ = nterm func_f_param ()
Entering state 35
Stack now 0 5 10 21 27 35
Reducing stack by rule 35 (line 181):
   $1 = nterm func_f_param ()
-> $$ = nterm real_func_f_params ()
Entering state 34
Stack now 0 5 10 21 27 34
Next token is token ")" ()
Reducing stack by rule 33 (line 175):
   $1 = nterm real_func_f_params ()
-> $$ = nterm func_f_params ()
Entering state 33
Stack now 0 5 10 21 27 33
Next token is token ")" ()
Shifting token ")" ()
Entering state 40
Stack now 0 5 10 21 27 33 40
Reading a token
Next token is token "{" ()
Shifting token "{" ()
Entering state 65
Stack now 0 5 10 21 27 33 40 65
Reducing stack by rule 42 (line 209):
-> $$ = nterm block_elements ()
Entering state 87
Stack now 0 5 10 21 27 33 40 65 87
Reading a token
Next token is token "if" ()
Shifting token "if" ()
Entering state 104
Stack now 0 5 10 21 27 33 40 65 87 104
Reading a token
Next token is token "(" ()
Shifting token "(" ()
Entering state 124
Stack now 0 5 10 21 27 33 40 65 87 104 124
Reading a token
Next token is token "identifier" ()
Shifting token "identifier" ()
Entering state 18
Stack now 0 5 10 21 27 33 40 65 87 104 124 18
Reducing stack by rule 46 (line 219):
   $1 = token "identifier" ()
-> $$ = nterm ident ()
Entering state 49
Stack now 0 5 10 21 27 33 40 65 87 104 124 49
Reading a token
Next token is token "<" ()
Reducing stack by rule 61 (line 247):
   $1 = nterm ident ()
-> $$ = nterm l_val ()
Entering state 51
Stack now 0 5 10 21 27 33 40 65 87 104 124 51
Reducing stack by rule 65 (line 259):
   $1 = nterm l_val ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 10 21 27 33 40 65 87 104 124 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 10 21 27 33 40 65 87 104 124 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 10 21 27 33 40 65 87 104 124 55
Next token is token "<" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 135
Stack now 0 5 10 21 27 33 40 65 87 104 124 135
Next token is token "<" ()
Shifting token "<" ()
Entering state 147
Stack now 0 5 10 21 27 33 40 65 87 104 124 135 147
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 10 21 27 33 40 65 87 104 124 135 147 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 10 21 27 33 40 65 87 104 124 135 147 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 10 21 27 33 40 65 87 104 124 135 147 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 10 21 27 33 40 65 87 104 124 135 147 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 10 21 27 33 40 65 87 104 124 135 147 55
Reading a token
Next token is token ")" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 158
Stack now 0 5 10 21 27 33 40 65 87 104 124 135 147 158
Next token is token ")" ()
Reducing stack by rule 85 (line 314):
   $1 = nterm add_exp ()
   $2 = token "<" ()
   $3 = nterm add_exp ()
-> $$ = nterm rel_exp ()
Entering state 136
Stack now 0 5 10 21 27 33 40 65 87 104 124 136
Reducing stack by rule 89 (line 322):
   $1 = nterm rel_exp ()
-> $$ = nterm eq_exp ()
Entering state 137
Stack now 0 5 10 21 27 33 40 65 87 104 124 137
Next token is token ")" ()
Reducing stack by rule 92 (line 329):
   $1 = nterm eq_exp ()
-> $$ = nterm l_and_exp ()
Entering state 138
Stack now 0 5 10 21 27 33 40 65 87 104 124 138
Next token is token ")" ()
Reducing stack by rule 94 (line 335):
   $1 = nterm l_and_exp ()
-> $$ = nterm l_or_exp ()
Entering state 139
Stack now 0 5 10 21 27 33 40 65 87 104 124 139
Next token is token ")" ()
Reducing stack by rule 59 (line 242):
   $1 = nterm l_or_exp ()
-> $$ = nterm cond ()
Entering state 134
Stack now 0 5 10 21 27 33 40 65 87 104 124 134
Next token is token ")" ()
Shifting token ")" ()
Entering state 143
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143
Reading a token
Next token is token "return" ()
Shifting token "return" ()
Entering state 108
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 108
Reading a token
Next token is token "identifier" ()
Shifting token "identifier" ()
Entering state 18
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 108 18
Reducing stack by rule 46 (line 219):
   $1 = token "identifier" ()
-> $$ = nterm ident ()
Entering state 49
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 108 49
Reading a token
Next token is token ";" ()
Reducing stack by rule 61 (line 247):
   $1 = nterm ident ()
-> $$ = nterm l_val ()
Entering state 51
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 108 51
Reducing stack by rule 65 (line 259):
   $1 = nterm l_val ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 108 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 108 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 108 55
Next token is token ";" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 56
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 108 56
Next token is token ";" ()
Reducing stack by rule 58 (line 239):
   $1 = nterm add_exp ()
-> $$ = nterm exp ()
Entering state 129
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 108 129
Next token is token ";" ()
Shifting token ";" ()
Entering state 141
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 108 129 141
Reducing stack by rule 57 (line 234):
   $1 = token "return" ()
   $2 = nterm exp ()
   $3 = token ";" ()
-> $$ = nterm stmt ()
Entering state 154
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154
Reading a token
Next token is token "else" ()
Shifting token "else" ()
Entering state 164
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164
Reading a token
Next token is token "return" ()
Shifting token "return" ()
Entering state 108
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108
Reading a token
Next token is token "identifier" ()
Shifting token "identifier" ()
Entering state 18
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 18
Reducing stack by rule 46 (line 219):
   $1 = token "identifier" ()
-> $$ = nterm ident ()
Entering state 49
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 49
Reading a token
Next token is token "(" ()
Shifting token "(" ()
Entering state 73
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 49 73
Reading a token
Next token is token "identifier" ()
Shifting token "identifier" ()
Entering state 18
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 49 73 18
Reducing stack by rule 46 (line 219):
   $1 = token "identifier" ()
-> $$ = nterm ident ()
Entering state 49
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 49 73 49
Reading a token
Next token is token "-" ()
Reducing stack by rule 61 (line 247):
   $1 = nterm ident ()
-> $$ = nterm l_val ()
Entering state 51
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 49 73 51
Reducing stack by rule 65 (line 259):
   $1 = nterm l_val ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 49 73 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 49 73 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 49 73 55
Next token is token "-" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 56
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 49 73 56
Next token is token "-" ()
Shifting token "-" ()
Entering state 80
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 49 73 56 80
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 49 73 56 80 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 49 73 56 80 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 49 73 56 80 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 49 73 56 80 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 100
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 49 73 56 80 100
Reading a token
Next token is token ")" ()
Reducing stack by rule 83 (line 308):
   $1 = nterm add_exp ()
   $2 = token "-" ()
   $3 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 56
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 49 73 56
Next token is token ")" ()
Reducing stack by rule 58 (line 239):
   $1 = nterm add_exp ()
-> $$ = nterm exp ()
Entering state 91
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 49 73 91
Reducing stack by rule 75 (line 292):
   $1 = nterm exp ()
-> $$ = nterm func_r_params_elements ()
Entering state 93
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 49 73 93
Next token is token ")" ()
Reducing stack by rule 74 (line 287):
   $1 = nterm func_r_params_elements ()
-> $$ = nterm func_r_params ()
Entering state 92
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 49 73 92
Next token is token ")" ()
Shifting token ")" ()
Entering state 118
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 49 73 92 118
Reducing stack by rule 69 (line 269):
   $1 = nterm ident ()
   $2 = token "(" ()
   $3 = nterm func_r_params ()
   $4 = token ")" ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 55
Reading a token
Next token is token "+" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 56
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 56
Next token is token "+" ()
Shifting token "+" ()
Entering state 79
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 56 79
Reading a token
Next token is token "identifier" ()
Shifting token "identifier" ()
Entering state 18
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 56 79 18
Reducing stack by rule 46 (line 219):
   $1 = token "identifier" ()
-> $$ = nterm ident ()
Entering state 49
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 56 79 49
Reading a token
Next token is token "(" ()
Shifting token "(" ()
Entering state 73
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 56 79 49 73
Reading a token
Next token is token "identifier" ()
Shifting token "identifier" ()
Entering state 18
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 56 79 49 73 18
Reducing stack by rule 46 (line 219):
   $1 = token "identifier" ()
-> $$ = nterm ident ()
Entering state 49
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 56 79 49 73 49
Reading a token
Next token is token "-" ()
Reducing stack by rule 61 (line 247):
   $1 = nterm ident ()
-> $$ = nterm l_val ()
Entering state 51
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 56 79 49 73 51
Reducing stack by rule 65 (line 259):
   $1 = nterm l_val ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 56 79 49 73 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 56 79 49 73 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 56 79 49 73 55
Next token is token "-" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 56
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 56 79 49 73 56
Next token is token "-" ()
Shifting token "-" ()
Entering state 80
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 56 79 49 73 56 80
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 56 79 49 73 56 80 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 56 79 49 73 56 80 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 56 79 49 73 56 80 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 56 79 49 73 56 80 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 100
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 56 79 49 73 56 80 100
Reading a token
Next token is token ")" ()
Reducing stack by rule 83 (line 308):
   $1 = nterm add_exp ()
   $2 = token "-" ()
   $3 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 56
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 56 79 49 73 56
Next token is token ")" ()
Reducing stack by rule 58 (line 239):
   $1 = nterm add_exp ()
-> $$ = nterm exp ()
Entering state 91
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 56 79 49 73 91
Reducing stack by rule 75 (line 292):
   $1 = nterm exp ()
-> $$ = nterm func_r_params_elements ()
Entering state 93
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 56 79 49 73 93
Next token is token ")" ()
Reducing stack by rule 74 (line 287):
   $1 = nterm func_r_params_elements ()
-> $$ = nterm func_r_params ()
Entering state 92
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 56 79 49 73 92
Next token is token ")" ()
Shifting token ")" ()
Entering state 118
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 56 79 49 73 92 118
Reducing stack by rule 69 (line 269):
   $1 = nterm ident ()
   $2 = token "(" ()
   $3 = nterm func_r_params ()
   $4 = token ")" ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 56 79 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 99
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 56 79 99
Reading a token
Next token is token ";" ()
Reducing stack by rule 82 (line 307):
   $1 = nterm add_exp ()
   $2 = token "+" ()
   $3 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 56
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 56
Next token is token ";" ()
Reducing stack by rule 58 (line 239):
   $1 = nterm add_exp ()
-> $$ = nterm exp ()
Entering state 129
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 129
Next token is token ";" ()
Shifting token ";" ()
Entering state 141
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 108 129 141
Reducing stack by rule 57 (line 234):
   $1 = token "return" ()
   $2 = nterm exp ()
   $3 = token ";" ()
-> $$ = nterm stmt ()
Entering state 165
Stack now 0 5 10 21 27 33 40 65 87 104 124 134 143 154 164 165
Reducing stack by rule 52 (line 229):
   $1 = token "if" ()
   $2 = token "(" ()
   $3 = nterm cond ()
   $4 = token ")" ()
   $5 = nterm stmt ()
   $6 = token "else" ()
   $7 = nterm stmt ()
-> $$ = nterm stmt ()
Entering state 115
Stack now 0 5 10 21 27 33 40 65 87 115
Reducing stack by rule 45 (line 216):
   $1 = nterm stmt ()
-> $$ = nterm block_item ()
Entering state 114
Stack now 0 5 10 21 27 33 40 65 87 114
Reducing stack by rule 43 (line 210):
   $1 = nterm block_elements ()
   $2 = nterm block_item ()
-> $$ = nterm block_elements ()
Entering state 87
Stack now 0 5 10 21 27 33 40 65 87
Reading a token
Next token is token "}" ()
Shifting token "}" ()
Entering state 110
Stack now 0 5 10 21 27 33 40 65 87 110
Reducing stack by rule 41 (line 205):
   $1 = token "{" ()
   $2 = nterm block_elements ()
   $3 = token "}" ()
-> $$ = nterm block ()
Entering state 66
Stack now 0 5 10 21 27 33 40 66
Reducing stack by rule 31 (line 164):
   $1 = nterm b_type ()
   $2 = nterm ident ()
   $3 = token "(" ()
   $4 = nterm func_f_params ()
   $5 = token ")" ()
   $6 = nterm block ()
-> $$ = nterm func_def ()
Entering state 12
Stack now 0 5 12
Reducing stack by rule 4 (line 79):
   $1 = nterm func_def ()
-> $$ = nterm comp_unit_item ()
Entering state 15
Stack now 0 5 15
Reducing stack by rule 3 (line 74):
   $1 = nterm comp_unit ()
   $2 = nterm comp_unit_item ()
-> $$ = nterm comp_unit ()
Entering state 5
Stack now 0 5
Reading a token
Next token is token "int" ()
Shifting token "int" ()
Entering state 2
Stack now 0 5 2
Reducing stack by rule 11 (line 100):
   $1 = token "int" ()
-> $$ = nterm b_type ()
Entering state 10
Stack now 0 5 10
Reading a token
Next token is token "identifier" ()
Shifting token "identifier" ()
Entering state 18
Stack now 0 5 10 18
Reducing stack by rule 46 (line 219):
   $1 = token "identifier" ()
-> $$ = nterm ident ()
Entering state 21
Stack now 0 5 10 21
Reading a token
Next token is token "(" ()
Shifting token "(" ()
Entering state 27
Stack now 0 5 10 21 27
Reading a token
Next token is token ")" ()
Reducing stack by rule 32 (line 174):
-> $$ = nterm func_f_params ()
Entering state 33
Stack now 0 5 10 21 27 33
Next token is token ")" ()
Shifting token ")" ()
Entering state 40
Stack now 0 5 10 21 27 33 40
Reading a token
Next token is token "{" ()
Shifting token "{" ()
Entering state 65
Stack now 0 5 10 21 27 33 40 65
Reducing stack by rule 42 (line 209):
-> $$ = nterm block_elements ()
Entering state 87
Stack now 0 5 10 21 27 33 40 65 87
Reading a token
Next token is token "int" ()
Shifting token "int" ()
Entering state 2
Stack now 0 5 10 21 27 33 40 65 87 2
Reducing stack by rule 11 (line 100):
   $1 = token "int" ()
-> $$ = nterm b_type ()
Entering state 112
Stack now 0 5 10 21 27 33 40 65 87 112
Reading a token
Next token is token "identifier" ()
Shifting token "identifier" ()
Entering state 18
Stack now 0 5 10 21 27 33 40 65 87 112 18
Reducing stack by rule 46 (line 219):
   $1 = token "identifier" ()
-> $$ = nterm ident ()
Entering state 31
Stack now 0 5 10 21 27 33 40 65 87 112 31
Reducing stack by rule 14 (line 111):
-> $$ = nterm array_dims ()
Entering state 28
Stack now 0 5 10 21 27 33 40 65 87 112 31 28
Reading a token
Next token is token "=" ()
Shifting token "=" ()
Entering state 36
Stack now 0 5 10 21 27 33 40 65 87 112 31 28 36
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 10 21 27 33 40 65 87 112 31 28 36 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 10 21 27 33 40 65 87 112 31 28 36 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 10 21 27 33 40 65 87 112 31 28 36 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 10 21 27 33 40 65 87 112 31 28 36 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 10 21 27 33 40 65 87 112 31 28 36 55
Reading a token
Next token is token ";" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 56
Stack now 0 5 10 21 27 33 40 65 87 112 31 28 36 56
Next token is token ";" ()
Reducing stack by rule 58 (line 239):
   $1 = nterm add_exp ()
-> $$ = nterm exp ()
Entering state 50
Stack now 0 5 10 21 27 33 40 65 87 112 31 28 36 50
Reducing stack by rule 27 (line 154):
   $1 = nterm exp ()
-> $$ = nterm init_val ()
Entering state 48
Stack now 0 5 10 21 27 33 40 65 87 112 31 28 36 48
Reducing stack by rule 26 (line 149):
   $1 = nterm ident ()
   $2 = nterm array_dims ()
   $3 = token "=" ()
   $4 = nterm init_val ()
-> $$ = nterm var_def ()
Entering state 20
Stack now 0 5 10 21 27 33 40 65 87 112 20
Reducing stack by rule 23 (line 142):
   $1 = nterm var_def ()
-> $$ = nterm var_def_list ()
Entering state 19
Stack now 0 5 10 21 27 33 40 65 87 112 19
Next token is token ";" ()
Shifting token ";" ()
Entering state 26
Stack now 0 5 10 21 27 33 40 65 87 112 19 26
Reducing stack by rule 22 (line 135):
   $1 = nterm b_type ()
   $2 = nterm var_def_list ()
   $3 = token ";" ()
-> $$ = nterm var_decl ()
Entering state 11
Stack now 0 5 10 21 27 33 40 65 87 11
Reducing stack by rule 7 (line 86):
   $1 = nterm var_decl ()
-> $$ = nterm decl ()
Entering state 111
Stack now 0 5 10 21 27 33 40 65 87 111
Reducing stack by rule 44 (line 215):
   $1 = nterm decl ()
-> $$ = nterm block_item ()
Entering state 114
Stack now 0 5 10 21 27 33 40 65 87 114
Reducing stack by rule 43 (line 210):
   $1 = nterm block_elements ()
   $2 = nterm block_item ()
-> $$ = nterm block_elements ()
Entering state 87
Stack now 0 5 10 21 27 33 40 65 87
Reading a token
Next token is token "while" ()
Shifting token "while" ()
Entering state 105
Stack now 0 5 10 21 27 33 40 65 87 105
Reading a token
Next token is token "(" ()
Shifting token "(" ()
Entering state 125
Stack now 0 5 10 21 27 33 40 65 87 105 125
Reading a token
Next token is token "identifier" ()
Shifting token "identifier" ()
Entering state 18
Stack now 0 5 10 21 27 33 40 65 87 105 125 18
Reducing stack by rule 46 (line 219):
   $1 = token "identifier" ()
-> $$ = nterm ident ()
Entering state 49
Stack now 0 5 10 21 27 33 40 65 87 105 125 49
Reading a token
Next token is token "<" ()
Reducing stack by rule 61 (line 247):
   $1 = nterm ident ()
-> $$ = nterm l_val ()
Entering state 51
Stack now 0 5 10 21 27 33 40 65 87 105 125 51
Reducing stack by rule 65 (line 259):
   $1 = nterm l_val ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 10 21 27 33 40 65 87 105 125 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 10 21 27 33 40 65 87 105 125 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 10 21 27 33 40 65 87 105 125 55
Next token is token "<" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 135
Stack now 0 5 10 21 27 33 40 65 87 105 125 135
Next token is token "<" ()
Shifting token "<" ()
Entering state 147
Stack now 0 5 10 21 27 33 40 65 87 105 125 135 147
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 10 21 27 33 40 65 87 105 125 135 147 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 10 21 27 33 40 65 87 105 125 135 147 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 10 21 27 33 40 65 87 105 125 135 147 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 10 21 27 33 40 65 87 105 125 135 147 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 10 21 27 33 40 65 87 105 125 135 147 55
Reading a token
Next token is token ")" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 158
Stack now 0 5 10 21 27 33 40 65 87 105 125 135 147 158
Next token is token ")" ()
Reducing stack by rule 85 (line 314):
   $1 = nterm add_exp ()
   $2 = token "<" ()
   $3 = nterm add_exp ()
-> $$ = nterm rel_exp ()
Entering state 136
Stack now 0 5 10 21 27 33 40 65 87 105 125 136
Reducing stack by rule 89 (line 322):
   $1 = nterm rel_exp ()
-> $$ = nterm eq_exp ()
Entering state 137
Stack now 0 5 10 21 27 33 40 65 87 105 125 137
Next token is token ")" ()
Reducing stack by rule 92 (line 329):
   $1 = nterm eq_exp ()
-> $$ = nterm l_and_exp ()
Entering state 138
Stack now 0 5 10 21 27 33 40 65 87 105 125 138
Next token is token ")" ()
Reducing stack by rule 94 (line 335):
   $1 = nterm l_and_exp ()
-> $$ = nterm l_or_exp ()
Entering state 139
Stack now 0 5 10 21 27 33 40 65 87 105 125 139
Next token is token ")" ()
Reducing stack by rule 59 (line 242):
   $1 = nterm l_or_exp ()
-> $$ = nterm cond ()
Entering state 140
Stack now 0 5 10 21 27 33 40 65 87 105 125 140
Next token is token ")" ()
Shifting token ")" ()
Entering state 152
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152
Reading a token
Next token is token "{" ()
Shifting token "{" ()
Entering state 65
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65
Reducing stack by rule 42 (line 209):
-> $$ = nterm block_elements ()
Entering state 87
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87
Reading a token
Next token is token "identifier" ()
Shifting token "identifier" ()
Entering state 18
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 18
Reducing stack by rule 46 (line 219):
   $1 = token "identifier" ()
-> $$ = nterm ident ()
Entering state 49
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 49
Reading a token
Next token is token "[" ()
Shifting token "[" ()
Entering state 74
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 49 74
Reading a token
Next token is token "identifier" ()
Shifting token "identifier" ()
Entering state 18
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 49 74 18
Reducing stack by rule 46 (line 219):
   $1 = token "identifier" ()
-> $$ = nterm ident ()
Entering state 49
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 49 74 49
Reading a token
Next token is token "]" ()
Reducing stack by rule 61 (line 247):
   $1 = nterm ident ()
-> $$ = nterm l_val ()
Entering state 51
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 49 74 51
Reducing stack by rule 65 (line 259):
   $1 = nterm l_val ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 49 74 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 49 74 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 49 74 55
Next token is token "]" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 56
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 49 74 56
Next token is token "]" ()
Reducing stack by rule 58 (line 239):
   $1 = nterm add_exp ()
-> $$ = nterm exp ()
Entering state 94
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 49 74 94
Next token is token "]" ()
Shifting token "]" ()
Entering state 120
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 49 74 94 120
Reducing stack by rule 62 (line 252):
   $1 = token "[" ()
   $2 = nterm exp ()
   $3 = token "]" ()
-> $$ = nterm array_indices ()
Entering state 75
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 49 75
Reading a token
Next token is token "=" ()
Reducing stack by rule 60 (line 246):
   $1 = nterm ident ()
   $2 = nterm array_indices ()
-> $$ = nterm l_val ()
Entering state 117
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117
Next token is token "=" ()
Shifting token "=" ()
Entering state 131
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131
Reading a token
Next token is token "identifier" ()
Shifting token "identifier" ()
Entering state 18
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 18
Reducing stack by rule 46 (line 219):
   $1 = token "identifier" ()
-> $$ = nterm ident ()
Entering state 49
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 49
Reading a token
Next token is token "(" ()
Shifting token "(" ()
Entering state 73
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 49 73
Reading a token
Next token is token "identifier" ()
Shifting token "identifier" ()
Entering state 18
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 49 73 18
Reducing stack by rule 46 (line 219):
   $1 = token "identifier" ()
-> $$ = nterm ident ()
Entering state 49
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 49 73 49
Reading a token
Next token is token "[" ()
Shifting token "[" ()
Entering state 74
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 49 73 49 74
Reading a token
Next token is token "identifier" ()
Shifting token "identifier" ()
Entering state 18
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 49 73 49 74 18
Reducing stack by rule 46 (line 219):
   $1 = token "identifier" ()
-> $$ = nterm ident ()
Entering state 49
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 49 73 49 74 49
Reading a token
Next token is token "]" ()
Reducing stack by rule 61 (line 247):
   $1 = nterm ident ()
-> $$ = nterm l_val ()
Entering state 51
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 49 73 49 74 51
Reducing stack by rule 65 (line 259):
   $1 = nterm l_val ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 49 73 49 74 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 49 73 49 74 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 49 73 49 74 55
Next token is token "]" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 56
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 49 73 49 74 56
Next token is token "]" ()
Reducing stack by rule 58 (line 239):
   $1 = nterm add_exp ()
-> $$ = nterm exp ()
Entering state 94
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 49 73 49 74 94
Next token is token "]" ()
Shifting token "]" ()
Entering state 120
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 49 73 49 74 94 120
Reducing stack by rule 62 (line 252):
   $1 = token "[" ()
   $2 = nterm exp ()
   $3 = token "]" ()
-> $$ = nterm array_indices ()
Entering state 75
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 49 73 49 75
Reading a token
Next token is token ")" ()
Reducing stack by rule 60 (line 246):
   $1 = nterm ident ()
   $2 = nterm array_indices ()
-> $$ = nterm l_val ()
Entering state 51
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 49 73 51
Reducing stack by rule 65 (line 259):
   $1 = nterm l_val ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 49 73 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 49 73 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 49 73 55
Next token is token ")" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 56
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 49 73 56
Next token is token ")" ()
Reducing stack by rule 58 (line 239):
   $1 = nterm add_exp ()
-> $$ = nterm exp ()
Entering state 91
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 49 73 91
Reducing stack by rule 75 (line 292):
   $1 = nterm exp ()
-> $$ = nterm func_r_params_elements ()
Entering state 93
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 49 73 93
Next token is token ")" ()
Reducing stack by rule 74 (line 287):
   $1 = nterm func_r_params_elements ()
-> $$ = nterm func_r_params ()
Entering state 92
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 49 73 92
Next token is token ")" ()
Shifting token ")" ()
Entering state 118
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 49 73 92 118
Reducing stack by rule 69 (line 269):
   $1 = nterm ident ()
   $2 = token "(" ()
   $3 = nterm func_r_params ()
   $4 = token ")" ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 55
Reading a token
Next token is token ";" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 56
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 56
Next token is token ";" ()
Reducing stack by rule 58 (line 239):
   $1 = nterm add_exp ()
-> $$ = nterm exp ()
Entering state 142
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 142
Next token is token ";" ()
Shifting token ";" ()
Entering state 153
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 142 153
Reducing stack by rule 47 (line 223):
   $1 = nterm l_val ()
   $2 = token "=" ()
   $3 = nterm exp ()
   $4 = token ";" ()
-> $$ = nterm stmt ()
Entering state 115
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 115
Reducing stack by rule 45 (line 216):
   $1 = nterm stmt ()
-> $$ = nterm block_item ()
Entering state 114
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 114
Reducing stack by rule 43 (line 210):
   $1 = nterm block_elements ()
   $2 = nterm block_item ()
-> $$ = nterm block_elements ()
Entering state 87
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87
Reading a token
Next token is token "identifier" ()
Shifting token "identifier" ()
Entering state 18
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 18
Reducing stack by rule 46 (line 219):
   $1 = token "identifier" ()
-> $$ = nterm ident ()
Entering state 49
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 49
Reading a token
Next token is token "=" ()
Reducing stack by rule 61 (line 247):
   $1 = nterm ident ()
-> $$ = nterm l_val ()
Entering state 117
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117
Next token is token "=" ()
Shifting token "=" ()
Entering state 131
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131
Reading a token
Next token is token "identifier" ()
Shifting token "identifier" ()
Entering state 18
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 18
Reducing stack by rule 46 (line 219):
   $1 = token "identifier" ()
-> $$ = nterm ident ()
Entering state 49
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 49
Reading a token
Next token is token "+" ()
Reducing stack by rule 61 (line 247):
   $1 = nterm ident ()
-> $$ = nterm l_val ()
Entering state 51
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 51
Reducing stack by rule 65 (line 259):
   $1 = nterm l_val ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 55
Next token is token "+" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 56
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 56
Next token is token "+" ()
Shifting token "+" ()
Entering state 79
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 56 79
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 56 79 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 56 79 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 56 79 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 56 79 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 99
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 56 79 99
Reading a token
Next token is token ";" ()
Reducing stack by rule 82 (line 307):
   $1 = nterm add_exp ()
   $2 = token "+" ()
   $3 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 56
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 56
Next token is token ";" ()
Reducing stack by rule 58 (line 239):
   $1 = nterm add_exp ()
-> $$ = nterm exp ()
Entering state 142
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 142
Next token is token ";" ()
Shifting token ";" ()
Entering state 153
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 142 153
Reducing stack by rule 47 (line 223):
   $1 = nterm l_val ()
   $2 = token "=" ()
   $3 = nterm exp ()
   $4 = token ";" ()
-> $$ = nterm stmt ()
Entering state 115
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 115
Reducing stack by rule 45 (line 216):
   $1 = nterm stmt ()
-> $$ = nterm block_item ()
Entering state 114
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 114
Reducing stack by rule 43 (line 210):
   $1 = nterm block_elements ()
   $2 = nterm block_item ()
-> $$ = nterm block_elements ()
Entering state 87
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87
Reading a token
Next token is token "}" ()
Shifting token "}" ()
Entering state 110
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 110
Reducing stack by rule 41 (line 205):
   $1 = token "{" ()
   $2 = nterm block_elements ()
   $3 = token "}" ()
-> $$ = nterm block ()
Entering state 113
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 113
Reducing stack by rule 50 (line 226):
   $1 = nterm block ()
-> $$ = nterm stmt ()
Entering state 163
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 163
Reducing stack by rule 53 (line 230):
   $1 = token "while" ()
   $2 = token "(" ()
   $3 = nterm cond ()
   $4 = token ")" ()
   $5 = nterm stmt ()
-> $$ = nterm stmt ()
Entering state 115
Stack now 0 5 10 21 27 33 40 65 87 115
Reducing stack by rule 45 (line 216):
   $1 = nterm stmt ()
-> $$ = nterm block_item ()
Entering state 114
Stack now 0 5 10 21 27 33 40 65 87 114
Reducing stack by rule 43 (line 210):
   $1 = nterm block_elements ()
   $2 = nterm block_item ()
-> $$ = nterm block_elements ()
Entering state 87
Stack now 0 5 10 21 27 33 40 65 87
Reading a token
Next token is token "identifier" ()
Shifting token "identifier" ()
Entering state 18
Stack now 0 5 10 21 27 33 40 65 87 18
Reducing stack by rule 46 (line 219):
   $1 = token "identifier" ()
-> $$ = nterm ident ()
Entering state 49
Stack now 0 5 10 21 27 33 40 65 87 49
Reading a token
Next token is token "=" ()
Reducing stack by rule 61 (line 247):
   $1 = nterm ident ()
-> $$ = nterm l_val ()
Entering state 117
Stack now 0 5 10 21 27 33 40 65 87 117
Next token is token "=" ()
Shifting token "=" ()
Entering state 131
Stack now 0 5 10 21 27 33 40 65 87 117 131
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 10 21 27 33 40 65 87 117 131 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 10 21 27 33 40 65 87 117 131 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 10 21 27 33 40 65 87 117 131 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 10 21 27 33 40 65 87 117 131 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 10 21 27 33 40 65 87 117 131 55
Reading a token
Next token is token ";" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 56
Stack now 0 5 10 21 27 33 40 65 87 117 131 56
Next token is token ";" ()
Reducing stack by rule 58 (line 239):
   $1 = nterm add_exp ()
-> $$ = nterm exp ()
Entering state 142
Stack now 0 5 10 21 27 33 40 65 87 117 131 142
Next token is token ";" ()
Shifting token ";" ()
Entering state 153
Stack now 0 5 10 21 27 33 40 65 87 117 131 142 153
Reducing stack by rule 47 (line 223):
   $1 = nterm l_val ()
   $2 = token "=" ()
   $3 = nterm exp ()
   $4 = token ";" ()
-> $$ = nterm stmt ()
Entering state 115
Stack now 0 5 10 21 27 33 40 65 87 115
Reducing stack by rule 45 (line 216):
   $1 = nterm stmt ()
-> $$ = nterm block_item ()
Entering state 114
Stack now 0 5 10 21 27 33 40 65 87 114
Reducing stack by rule 43 (line 210):
   $1 = nterm block_elements ()
   $2 = nterm block_item ()
-> $$ = nterm block_elements ()
Entering state 87
Stack now 0 5 10 21 27 33 40 65 87
Reading a token
Next token is token "int" ()
Shifting token "int" ()
Entering state 2
Stack now 0 5 10 21 27 33 40 65 87 2
Reducing stack by rule 11 (line 100):
   $1 = token "int" ()
-> $$ = nterm b_type ()
Entering state 112
Stack now 0 5 10 21 27 33 40 65 87 112
Reading a token
Next token is token "identifier" ()
Shifting token "identifier" ()
Entering state 18
Stack now 0 5 10 21 27 33 40 65 87 112 18
Reducing stack by rule 46 (line 219):
   $1 = token "identifier" ()
-> $$ = nterm ident ()
Entering state 31
Stack now 0 5 10 21 27 33 40 65 87 112 31
Reducing stack by rule 14 (line 111):
-> $$ = nterm array_dims ()
Entering state 28
Stack now 0 5 10 21 27 33 40 65 87 112 31 28
Reading a token
Next token is token "=" ()
Shifting token "=" ()
Entering state 36
Stack now 0 5 10 21 27 33 40 65 87 112 31 28 36
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 10 21 27 33 40 65 87 112 31 28 36 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 10 21 27 33 40 65 87 112 31 28 36 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 10 21 27 33 40 65 87 112 31 28 36 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 10 21 27 33 40 65 87 112 31 28 36 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 10 21 27 33 40 65 87 112 31 28 36 55
Reading a token
Next token is token ";" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 56
Stack now 0 5 10 21 27 33 40 65 87 112 31 28 36 56
Next token is token ";" ()
Reducing stack by rule 58 (line 239):
   $1 = nterm add_exp ()
-> $$ = nterm exp ()
Entering state 50
Stack now 0 5 10 21 27 33 40 65 87 112 31 28 36 50
Reducing stack by rule 27 (line 154):
   $1 = nterm exp ()
-> $$ = nterm init_val ()
Entering state 48
Stack now 0 5 10 21 27 33 40 65 87 112 31 28 36 48
Reducing stack by rule 26 (line 149):
   $1 = nterm ident ()
   $2 = nterm array_dims ()
   $3 = token "=" ()
   $4 = nterm init_val ()
-> $$ = nterm var_def ()
Entering state 20
Stack now 0 5 10 21 27 33 40 65 87 112 20
Reducing stack by rule 23 (line 142):
   $1 = nterm var_def ()
-> $$ = nterm var_def_list ()
Entering state 19
Stack now 0 5 10 21 27 33 40 65 87 112 19
Next token is token ";" ()
Shifting token ";" ()
Entering state 26
Stack now 0 5 10 21 27 33 40 65 87 112 19 26
Reducing stack by rule 22 (line 135):
   $1 = nterm b_type ()
   $2 = nterm var_def_list ()
   $3 = token ";" ()
-> $$ = nterm var_decl ()
Entering state 11
Stack now 0 5 10 21 27 33 40 65 87 11
Reducing stack by rule 7 (line 86):
   $1 = nterm var_decl ()
-> $$ = nterm decl ()
Entering state 111
Stack now 0 5 10 21 27 33 40 65 87 111
Reducing stack by rule 44 (line 215):
   $1 = nterm decl ()
-> $$ = nterm block_item ()
Entering state 114
Stack now 0 5 10 21 27 33 40 65 87 114
Reducing stack by rule 43 (line 210):
   $1 = nterm block_elements ()
   $2 = nterm block_item ()
-> $$ = nterm block_elements ()
Entering state 87
Stack now 0 5 10 21 27 33 40 65 87
Reading a token
Next token is token "while" ()
Shifting token "while" ()
Entering state 105
Stack now 0 5 10 21 27 33 40 65 87 105
Reading a token
Next token is token "(" ()
Shifting token "(" ()
Entering state 125
Stack now 0 5 10 21 27 33 40 65 87 105 125
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 10 21 27 33 40 65 87 105 125 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 10 21 27 33 40 65 87 105 125 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 10 21 27 33 40 65 87 105 125 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 10 21 27 33 40 65 87 105 125 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 10 21 27 33 40 65 87 105 125 55
Reading a token
Next token is token ")" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 135
Stack now 0 5 10 21 27 33 40 65 87 105 125 135
Next token is token ")" ()
Reducing stack by rule 84 (line 313):
   $1 = nterm add_exp ()
-> $$ = nterm rel_exp ()
Entering state 136
Stack now 0 5 10 21 27 33 40 65 87 105 125 136
Reducing stack by rule 89 (line 322):
   $1 = nterm rel_exp ()
-> $$ = nterm eq_exp ()
Entering state 137
Stack now 0 5 10 21 27 33 40 65 87 105 125 137
Next token is token ")" ()
Reducing stack by rule 92 (line 329):
   $1 = nterm eq_exp ()
-> $$ = nterm l_and_exp ()
Entering state 138
Stack now 0 5 10 21 27 33 40 65 87 105 125 138
Next token is token ")" ()
Reducing stack by rule 94 (line 335):
   $1 = nterm l_and_exp ()
-> $$ = nterm l_or_exp ()
Entering state 139
Stack now 0 5 10 21 27 33 40 65 87 105 125 139
Next token is token ")" ()
Reducing stack by rule 59 (line 242):
   $1 = nterm l_or_exp ()
-> $$ = nterm cond ()
Entering state 140
Stack now 0 5 10 21 27 33 40 65 87 105 125 140
Next token is token ")" ()
Shifting token ")" ()
Entering state 152
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152
Reading a token
Next token is token "{" ()
Shifting token "{" ()
Entering state 65
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65
Reducing stack by rule 42 (line 209):
-> $$ = nterm block_elements ()
Entering state 87
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87
Reading a token
Next token is token "if" ()
Shifting token "if" ()
Entering state 104
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104
Reading a token
Next token is token "(" ()
Shifting token "(" ()
Entering state 124
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124
Reading a token
Next token is token "identifier" ()
Shifting token "identifier" ()
Entering state 18
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 18
Reducing stack by rule 46 (line 219):
   $1 = token "identifier" ()
-> $$ = nterm ident ()
Entering state 49
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 49
Reading a token
Next token is token "[" ()
Shifting token "[" ()
Entering state 74
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 49 74
Reading a token
Next token is token "identifier" ()
Shifting token "identifier" ()
Entering state 18
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 49 74 18
Reducing stack by rule 46 (line 219):
   $1 = token "identifier" ()
-> $$ = nterm ident ()
Entering state 49
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 49 74 49
Reading a token
Next token is token "]" ()
Reducing stack by rule 61 (line 247):
   $1 = nterm ident ()
-> $$ = nterm l_val ()
Entering state 51
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 49 74 51
Reducing stack by rule 65 (line 259):
   $1 = nterm l_val ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 49 74 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 49 74 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 49 74 55
Next token is token "]" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 56
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 49 74 56
Next token is token "]" ()
Reducing stack by rule 58 (line 239):
   $1 = nterm add_exp ()
-> $$ = nterm exp ()
Entering state 94
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 49 74 94
Next token is token "]" ()
Shifting token "]" ()
Entering state 120
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 49 74 94 120
Reducing stack by rule 62 (line 252):
   $1 = token "[" ()
   $2 = nterm exp ()
   $3 = token "]" ()
-> $$ = nterm array_indices ()
Entering state 75
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 49 75
Reading a token
Next token is token "==" ()
Reducing stack by rule 60 (line 246):
   $1 = nterm ident ()
   $2 = nterm array_indices ()
-> $$ = nterm l_val ()
Entering state 51
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 51
Reducing stack by rule 65 (line 259):
   $1 = nterm l_val ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 55
Next token is token "==" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 135
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 135
Next token is token "==" ()
Reducing stack by rule 84 (line 313):
   $1 = nterm add_exp ()
-> $$ = nterm rel_exp ()
Entering state 136
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 136
Reducing stack by rule 89 (line 322):
   $1 = nterm rel_exp ()
-> $$ = nterm eq_exp ()
Entering state 137
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 137
Next token is token "==" ()
Shifting token "==" ()
Entering state 148
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 137 148
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 137 148 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 137 148 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 137 148 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 137 148 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 137 148 55
Reading a token
Next token is token "||" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 135
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 137 148 135
Next token is token "||" ()
Reducing stack by rule 84 (line 313):
   $1 = nterm add_exp ()
-> $$ = nterm rel_exp ()
Entering state 159
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 137 148 159
Reducing stack by rule 90 (line 323):
   $1 = nterm eq_exp ()
   $2 = token "==" ()
   $3 = nterm rel_exp ()
-> $$ = nterm eq_exp ()
Entering state 137
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 137
Next token is token "||" ()
Reducing stack by rule 92 (line 329):
   $1 = nterm eq_exp ()
-> $$ = nterm l_and_exp ()
Entering state 138
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 138
Next token is token "||" ()
Reducing stack by rule 94 (line 335):
   $1 = nterm l_and_exp ()
-> $$ = nterm l_or_exp ()
Entering state 139
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 139
Next token is token "||" ()
Shifting token "||" ()
Entering state 151
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 139 151
Reading a token
Next token is token "identifier" ()
Shifting token "identifier" ()
Entering state 18
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 139 151 18
Reducing stack by rule 46 (line 219):
   $1 = token "identifier" ()
-> $$ = nterm ident ()
Entering state 49
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 139 151 49
Reading a token
Next token is token "[" ()
Shifting token "[" ()
Entering state 74
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 139 151 49 74
Reading a token
Next token is token "identifier" ()
Shifting token "identifier" ()
Entering state 18
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 139 151 49 74 18
Reducing stack by rule 46 (line 219):
   $1 = token "identifier" ()
-> $$ = nterm ident ()
Entering state 49
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 139 151 49 74 49
Reading a token
Next token is token "]" ()
Reducing stack by rule 61 (line 247):
   $1 = nterm ident ()
-> $$ = nterm l_val ()
Entering state 51
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 139 151 49 74 51
Reducing stack by rule 65 (line 259):
   $1 = nterm l_val ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 139 151 49 74 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 139 151 49 74 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 139 151 49 74 55
Next token is token "]" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 56
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 139 151 49 74 56
Next token is token "]" ()
Reducing stack by rule 58 (line 239):
   $1 = nterm add_exp ()
-> $$ = nterm exp ()
Entering state 94
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 139 151 49 74 94
Next token is token "]" ()
Shifting token "]" ()
Entering state 120
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 139 151 49 74 94 120
Reducing stack by rule 62 (line 252):
   $1 = token "[" ()
   $2 = nterm exp ()
   $3 = token "]" ()
-> $$ = nterm array_indices ()
Entering state 75
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 139 151 49 75
Reading a token
Next token is token "==" ()
Reducing stack by rule 60 (line 246):
   $1 = nterm ident ()
   $2 = nterm array_indices ()
-> $$ = nterm l_val ()
Entering state 51
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 139 151 51
Reducing stack by rule 65 (line 259):
   $1 = nterm l_val ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 139 151 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 139 151 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 139 151 55
Next token is token "==" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 135
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 139 151 135
Next token is token "==" ()
Reducing stack by rule 84 (line 313):
   $1 = nterm add_exp ()
-> $$ = nterm rel_exp ()
Entering state 136
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 139 151 136
Reducing stack by rule 89 (line 322):
   $1 = nterm rel_exp ()
-> $$ = nterm eq_exp ()
Entering state 137
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 139 151 137
Next token is token "==" ()
Shifting token "==" ()
Entering state 148
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 139 151 137 148
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 139 151 137 148 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 139 151 137 148 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 139 151 137 148 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 139 151 137 148 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 139 151 137 148 55
Reading a token
Next token is token ")" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 135
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 139 151 137 148 135
Next token is token ")" ()
Reducing stack by rule 84 (line 313):
   $1 = nterm add_exp ()
-> $$ = nterm rel_exp ()
Entering state 159
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 139 151 137 148 159
Reducing stack by rule 90 (line 323):
   $1 = nterm eq_exp ()
   $2 = token "==" ()
   $3 = nterm rel_exp ()
-> $$ = nterm eq_exp ()
Entering state 137
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 139 151 137
Next token is token ")" ()
Reducing stack by rule 92 (line 329):
   $1 = nterm eq_exp ()
-> $$ = nterm l_and_exp ()
Entering state 162
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 139 151 162
Next token is token ")" ()
Reducing stack by rule 95 (line 336):
   $1 = nterm l_or_exp ()
   $2 = token "||" ()
   $3 = nterm l_and_exp ()
-> $$ = nterm l_or_exp ()
Entering state 139
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 139
Next token is token ")" ()
Reducing stack by rule 59 (line 242):
   $1 = nterm l_or_exp ()
-> $$ = nterm cond ()
Entering state 134
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 134
Next token is token ")" ()
Shifting token ")" ()
Entering state 143
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 134 143
Reading a token
Next token is token "continue" ()
Shifting token "continue" ()
Entering state 107
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 134 143 107
Reading a token
Next token is token ";" ()
Shifting token ";" ()
Entering state 127
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 134 143 107 127
Reducing stack by rule 55 (line 232):
   $1 = token "continue" ()
   $2 = token ";" ()
-> $$ = nterm stmt ()
Entering state 154
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 134 143 154
Reading a token
Next token is token "if" ()
Reducing stack by rule 51 (line 227):
   $1 = token "if" ()
   $2 = token "(" ()
   $3 = nterm cond ()
   $4 = token ")" ()
   $5 = nterm stmt ()
-> $$ = nterm stmt ()
Entering state 115
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 115
Reducing stack by rule 45 (line 216):
   $1 = nterm stmt ()
-> $$ = nterm block_item ()
Entering state 114
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 114
Reducing stack by rule 43 (line 210):
   $1 = nterm block_elements ()
   $2 = nterm block_item ()
-> $$ = nterm block_elements ()
Entering state 87
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87
Next token is token "if" ()
Shifting token "if" ()
Entering state 104
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104
Reading a token
Next token is token "(" ()
Shifting token "(" ()
Entering state 124
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124
Reading a token
Next token is token "identifier" ()
Shifting token "identifier" ()
Entering state 18
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 18
Reducing stack by rule 46 (line 219):
   $1 = token "identifier" ()
-> $$ = nterm ident ()
Entering state 49
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 49
Reading a token
Next token is token "==" ()
Reducing stack by rule 61 (line 247):
   $1 = nterm ident ()
-> $$ = nterm l_val ()
Entering state 51
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 51
Reducing stack by rule 65 (line 259):
   $1 = nterm l_val ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 55
Next token is token "==" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 135
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 135
Next token is token "==" ()
Reducing stack by rule 84 (line 313):
   $1 = nterm add_exp ()
-> $$ = nterm rel_exp ()
Entering state 136
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 136
Reducing stack by rule 89 (line 322):
   $1 = nterm rel_exp ()
-> $$ = nterm eq_exp ()
Entering state 137
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 137
Next token is token "==" ()
Shifting token "==" ()
Entering state 148
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 137 148
Reading a token
Next token is token "identifier" ()
Shifting token "identifier" ()
Entering state 18
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 137 148 18
Reducing stack by rule 46 (line 219):
   $1 = token "identifier" ()
-> $$ = nterm ident ()
Entering state 49
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 137 148 49
Reading a token
Next token is token ")" ()
Reducing stack by rule 61 (line 247):
   $1 = nterm ident ()
-> $$ = nterm l_val ()
Entering state 51
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 137 148 51
Reducing stack by rule 65 (line 259):
   $1 = nterm l_val ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 137 148 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 137 148 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 137 148 55
Next token is token ")" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 135
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 137 148 135
Next token is token ")" ()
Reducing stack by rule 84 (line 313):
   $1 = nterm add_exp ()
-> $$ = nterm rel_exp ()
Entering state 159
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 137 148 159
Reducing stack by rule 90 (line 323):
   $1 = nterm eq_exp ()
   $2 = token "==" ()
   $3 = nterm rel_exp ()
-> $$ = nterm eq_exp ()
Entering state 137
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 137
Next token is token ")" ()
Reducing stack by rule 92 (line 329):
   $1 = nterm eq_exp ()
-> $$ = nterm l_and_exp ()
Entering state 138
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 138
Next token is token ")" ()
Reducing stack by rule 94 (line 335):
   $1 = nterm l_and_exp ()
-> $$ = nterm l_or_exp ()
Entering state 139
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 139
Next token is token ")" ()
Reducing stack by rule 59 (line 242):
   $1 = nterm l_or_exp ()
-> $$ = nterm cond ()
Entering state 134
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 134
Next token is token ")" ()
Shifting token ")" ()
Entering state 143
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 134 143
Reading a token
Next token is token "break" ()
Shifting token "break" ()
Entering state 106
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 134 143 106
Reading a token
Next token is token ";" ()
Shifting token ";" ()
Entering state 126
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 134 143 106 126
Reducing stack by rule 54 (line 231):
   $1 = token "break" ()
   $2 = token ";" ()
-> $$ = nterm stmt ()
Entering state 154
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 104 124 134 143 154
Reading a token
Next token is token "identifier" ()
Reducing stack by rule 51 (line 227):
   $1 = token "if" ()
   $2 = token "(" ()
   $3 = nterm cond ()
   $4 = token ")" ()
   $5 = nterm stmt ()
-> $$ = nterm stmt ()
Entering state 115
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 115
Reducing stack by rule 45 (line 216):
   $1 = nterm stmt ()
-> $$ = nterm block_item ()
Entering state 114
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 114
Reducing stack by rule 43 (line 210):
   $1 = nterm block_elements ()
   $2 = nterm block_item ()
-> $$ = nterm block_elements ()
Entering state 87
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87
Next token is token "identifier" ()
Shifting token "identifier" ()
Entering state 18
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 18
Reducing stack by rule 46 (line 219):
   $1 = token "identifier" ()
-> $$ = nterm ident ()
Entering state 49
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 49
Reading a token
Next token is token "=" ()
Reducing stack by rule 61 (line 247):
   $1 = nterm ident ()
-> $$ = nterm l_val ()
Entering state 117
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117
Next token is token "=" ()
Shifting token "=" ()
Entering state 131
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131
Reading a token
Next token is token "identifier" ()
Shifting token "identifier" ()
Entering state 18
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 18
Reducing stack by rule 46 (line 219):
   $1 = token "identifier" ()
-> $$ = nterm ident ()
Entering state 49
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 49
Reading a token
Next token is token "+" ()
Reducing stack by rule 61 (line 247):
   $1 = nterm ident ()
-> $$ = nterm l_val ()
Entering state 51
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 51
Reducing stack by rule 65 (line 259):
   $1 = nterm l_val ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 55
Next token is token "+" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 56
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 56
Next token is token "+" ()
Shifting token "+" ()
Entering state 79
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 56 79
Reading a token
Next token is token "identifier" ()
Shifting token "identifier" ()
Entering state 18
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 56 79 18
Reducing stack by rule 46 (line 219):
   $1 = token "identifier" ()
-> $$ = nterm ident ()
Entering state 49
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 56 79 49
Reading a token
Next token is token "[" ()
Shifting token "[" ()
Entering state 74
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 56 79 49 74
Reading a token
Next token is token "identifier" ()
Shifting token "identifier" ()
Entering state 18
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 56 79 49 74 18
Reducing stack by rule 46 (line 219):
   $1 = token "identifier" ()
-> $$ = nterm ident ()
Entering state 49
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 56 79 49 74 49
Reading a token
Next token is token "]" ()
Reducing stack by rule 61 (line 247):
   $1 = nterm ident ()
-> $$ = nterm l_val ()
Entering state 51
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 56 79 49 74 51
Reducing stack by rule 65 (line 259):
   $1 = nterm l_val ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 56 79 49 74 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 56 79 49 74 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 56 79 49 74 55
Next token is token "]" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 56
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 56 79 49 74 56
Next token is token "]" ()
Reducing stack by rule 58 (line 239):
   $1 = nterm add_exp ()
-> $$ = nterm exp ()
Entering state 94
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 56 79 49 74 94
Next token is token "]" ()
Shifting token "]" ()
Entering state 120
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 56 79 49 74 94 120
Reducing stack by rule 62 (line 252):
   $1 = token "[" ()
   $2 = nterm exp ()
   $3 = token "]" ()
-> $$ = nterm array_indices ()
Entering state 75
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 56 79 49 75
Reading a token
Next token is token ";" ()
Reducing stack by rule 60 (line 246):
   $1 = nterm ident ()
   $2 = nterm array_indices ()
-> $$ = nterm l_val ()
Entering state 51
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 56 79 51
Reducing stack by rule 65 (line 259):
   $1 = nterm l_val ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 56 79 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 56 79 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 99
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 56 79 99
Next token is token ";" ()
Reducing stack by rule 82 (line 307):
   $1 = nterm add_exp ()
   $2 = token "+" ()
   $3 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 56
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 56
Next token is token ";" ()
Reducing stack by rule 58 (line 239):
   $1 = nterm add_exp ()
-> $$ = nterm exp ()
Entering state 142
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 142
Next token is token ";" ()
Shifting token ";" ()
Entering state 153
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 142 153
Reducing stack by rule 47 (line 223):
   $1 = nterm l_val ()
   $2 = token "=" ()
   $3 = nterm exp ()
   $4 = token ";" ()
-> $$ = nterm stmt ()
Entering state 115
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 115
Reducing stack by rule 45 (line 216):
   $1 = nterm stmt ()
-> $$ = nterm block_item ()
Entering state 114
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 114
Reducing stack by rule 43 (line 210):
   $1 = nterm block_elements ()
   $2 = nterm block_item ()
-> $$ = nterm block_elements ()
Entering state 87
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87
Reading a token
Next token is token "identifier" ()
Shifting token "identifier" ()
Entering state 18
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 18
Reducing stack by rule 46 (line 219):
   $1 = token "identifier" ()
-> $$ = nterm ident ()
Entering state 49
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 49
Reading a token
Next token is token "=" ()
Reducing stack by rule 61 (line 247):
   $1 = nterm ident ()
-> $$ = nterm l_val ()
Entering state 117
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117
Next token is token "=" ()
Shifting token "=" ()
Entering state 131
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131
Reading a token
Next token is token "identifier" ()
Shifting token "identifier" ()
Entering state 18
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 18
Reducing stack by rule 46 (line 219):
   $1 = token "identifier" ()
-> $$ = nterm ident ()
Entering state 49
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 49
Reading a token
Next token is token "+" ()
Reducing stack by rule 61 (line 247):
   $1 = nterm ident ()
-> $$ = nterm l_val ()
Entering state 51
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 51
Reducing stack by rule 65 (line 259):
   $1 = nterm l_val ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 55
Next token is token "+" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 56
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 56
Next token is token "+" ()
Shifting token "+" ()
Entering state 79
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 56 79
Reading a token
Next token is token "integer" ()
Shifting token "integer" ()
Entering state 42
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 56 79 42
Reducing stack by rule 67 (line 264):
   $1 = token "integer" ()
-> $$ = nterm number ()
Entering state 53
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 56 79 53
Reducing stack by rule 66 (line 260):
   $1 = nterm number ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 56 79 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 56 79 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 99
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 56 79 99
Reading a token
Next token is token ";" ()
Reducing stack by rule 82 (line 307):
   $1 = nterm add_exp ()
   $2 = token "+" ()
   $3 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 56
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 56
Next token is token ";" ()
Reducing stack by rule 58 (line 239):
   $1 = nterm add_exp ()
-> $$ = nterm exp ()
Entering state 142
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 142
Next token is token ";" ()
Shifting token ";" ()
Entering state 153
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 117 131 142 153
Reducing stack by rule 47 (line 223):
   $1 = nterm l_val ()
   $2 = token "=" ()
   $3 = nterm exp ()
   $4 = token ";" ()
-> $$ = nterm stmt ()
Entering state 115
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 115
Reducing stack by rule 45 (line 216):
   $1 = nterm stmt ()
-> $$ = nterm block_item ()
Entering state 114
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 114
Reducing stack by rule 43 (line 210):
   $1 = nterm block_elements ()
   $2 = nterm block_item ()
-> $$ = nterm block_elements ()
Entering state 87
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87
Reading a token
Next token is token "}" ()
Shifting token "}" ()
Entering state 110
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 65 87 110
Reducing stack by rule 41 (line 205):
   $1 = token "{" ()
   $2 = nterm block_elements ()
   $3 = token "}" ()
-> $$ = nterm block ()
Entering state 113
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 113
Reducing stack by rule 50 (line 226):
   $1 = nterm block ()
-> $$ = nterm stmt ()
Entering state 163
Stack now 0 5 10 21 27 33 40 65 87 105 125 140 152 163
Reducing stack by rule 53 (line 230):
   $1 = token "while" ()
   $2 = token "(" ()
   $3 = nterm cond ()
   $4 = token ")" ()
   $5 = nterm stmt ()
-> $$ = nterm stmt ()
Entering state 115
Stack now 0 5 10 21 27 33 40 65 87 115
Reducing stack by rule 45 (line 216):
   $1 = nterm stmt ()
-> $$ = nterm block_item ()
Entering state 114
Stack now 0 5 10 21 27 33 40 65 87 114
Reducing stack by rule 43 (line 210):
   $1 = nterm block_elements ()
   $2 = nterm block_item ()
-> $$ = nterm block_elements ()
Entering state 87
Stack now 0 5 10 21 27 33 40 65 87
Reading a token
Next token is token "return" ()
Shifting token "return" ()
Entering state 108
Stack now 0 5 10 21 27 33 40 65 87 108
Reading a token
Next token is token "identifier" ()
Shifting token "identifier" ()
Entering state 18
Stack now 0 5 10 21 27 33 40 65 87 108 18
Reducing stack by rule 46 (line 219):
   $1 = token "identifier" ()
-> $$ = nterm ident ()
Entering state 49
Stack now 0 5 10 21 27 33 40 65 87 108 49
Reading a token
Next token is token ";" ()
Reducing stack by rule 61 (line 247):
   $1 = nterm ident ()
-> $$ = nterm l_val ()
Entering state 51
Stack now 0 5 10 21 27 33 40 65 87 108 51
Reducing stack by rule 65 (line 259):
   $1 = nterm l_val ()
-> $$ = nterm primary_exp ()
Entering state 52
Stack now 0 5 10 21 27 33 40 65 87 108 52
Reducing stack by rule 68 (line 268):
   $1 = nterm primary_exp ()
-> $$ = nterm unary_exp ()
Entering state 54
Stack now 0 5 10 21 27 33 40 65 87 108 54
Reducing stack by rule 77 (line 298):
   $1 = nterm unary_exp ()
-> $$ = nterm mul_exp ()
Entering state 55
Stack now 0 5 10 21 27 33 40 65 87 108 55
Next token is token ";" ()
Reducing stack by rule 81 (line 306):
   $1 = nterm mul_exp ()
-> $$ = nterm add_exp ()
Entering state 56
Stack now 0 5 10 21 27 33 40 65 87 108 56
Next token is token ";" ()
Reducing stack by rule 58 (line 239):
   $1 = nterm add_exp ()
-> $$ = nterm exp ()
Entering state 129
Stack now 0 5 10 21 27 33 40 65 87 108 129
Next token is token ";" ()
Shifting token ";" ()
Entering state 141
Stack now 0 5 10 21 27 33 40 65 87 108 129 141
Reducing stack by rule 57 (line 234):
   $1 = token "return" ()
   $2 = nterm exp ()
   $3 = token ";" ()
-> $$ = nterm stmt ()
Entering state 115
Stack now 0 5 10 21 27 33 40 65 87 115
Reducing stack by rule 45 (line 216):
   $1 = nterm stmt ()
-> $$ = nterm block_item ()
Entering state 114
Stack now 0 5 10 21 27 33 40 65 87 114
Reducing stack by rule 43 (line 210):
   $1 = nterm block_elements ()
   $2 = nterm block_item ()
-> $$ = nterm block_elements ()
Entering state 87
Stack now 0 5 10 21 27 33 40 65 87
Reading a token
Next token is token "}" ()
Shifting token "}" ()
Entering state 110
Stack now 0 5 10 21 27 33 40 65 87 110
Reducing stack by rule 41 (line 205):
   $1 = token "{" ()
   $2 = nterm block_elements ()
   $3 = token "}" ()
-> $$ = nterm block ()
Entering state 66
Stack now 0 5 10 21 27 33 40 66
Reducing stack by rule 31 (line 164):
   $1 = nterm b_type ()
   $2 = nterm ident ()
   $3 = token "(" ()
   $4 = nterm func_f_params ()
   $5 = token ")" ()
   $6 = nterm block ()
-> $$ = nterm func_def ()
Entering state 12
Stack now 0 5 12
Reducing stack by rule 4 (line 79):
   $1 = nterm func_def ()
-> $$ = nterm comp_unit_item ()
Entering state 15
Stack now 0 5 15
Reducing stack by rule 3 (line 74):
   $1 = nterm comp_unit ()
   $2 = nterm comp_unit_item ()
-> $$ = nterm comp_unit ()
Entering state 5
Stack now 0 5
Reading a token
Next token is token "end of file" ()
Reducing stack by rule 1 (line 66):
   $1 = nterm comp_unit ()
-> $$ = nterm start_symbol ()
Entering state 4
Stack now 0 4
Next token is token "end of file" ()
Shifting token "end of file" ()
Entering state 14
Stack now 0 4 14
Stack now 0 4 14
Cleanup: popping token "end of file" ()
Cleanup: popping nterm start_symbol ()
